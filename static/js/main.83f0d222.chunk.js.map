{"version":3,"sources":["Assets/Parking-Logo.svg","parking.geojson","Firebase.js","Navigation.js","FormError.js","Login.js","MapboxAJAX.js","Slider.js","Mapbox.js","UserInput.js","Register.js","UserInfo.js","VehicleDetails.js","TransactionHandle.js","Receipt.js","Confirmation.js","ReservationDetails.js","Account.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Navigation","this","props","user","logOutUser","className","to","src","Logo","width","height","alt","onClick","e","Component","FormError","theMessage","Login","state","email","password","errorMessage","handleChange","bind","handleSubmit","itemName","target","name","itemValue","value","setState","registrationInfo","toHomePage","preventDefault","signInWithEmailAndPassword","then","catch","error","message","pathname","style","marginTop","onSubmit","padding","marginLeft","marginRight","htmlFor","required","type","id","placeholder","onChange","getResults","createMuiTheme","overrides","MuiSlider","thumb","color","track","rail","makeStyles","root","input","coordinates","UserInput","address","textAlign","display","justifyContent","$","require","Mapbox","lng","lat","zoom","geolat","geolong","currPage","curLat","curLng","toReservationDetails","handleClick","buttonRef","React","createRef","mapboxgl","accessToken","map","Map","container","mapContainer","center","limit","parkingdata","bbox","self","geocoder","MapboxGeocoder","marker","types","render","item","properties","maki","text","SearchBox","document","getElementById","appendChild","onAdd","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","on","features","geometry","slice","place_name","Math","abs","lngLat","Popup","setLngLat","setHTML","pData","price","addTo","getCanvas","cursor","result","remove","mainMarker","createElement","Marker","query","ajax","method","url","done","data","console","log","forEach","el","undefined","substring","indexOf","toUpperCase","hours","opening","floor","random","closing","availablespots","popup","current","getElementsByName","addEventListener","setPopup","getElement","parkingData","ref","database","DB_user","DB_lname","DB_email","DB_phonenumber","DB_userID","Register","lname","phonenumber","passOne","passTwo","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","onAuthStateChanged","profile","userid","String","uid","push","validation","inputString","regex","me","isValid","i","length","test","charAt","UserInfo","license","finalRegistrationInfo","toVehicleDetails","handleSelect","location","Button","backgroundColor","borderColor","fontFamily","years","Array","from","val","index","toString","VehicleDetails","make","model","year","plate","toConfirmation","vehicleMake","vehicleModel","vehicleYear","vehicleColor","vehiclePlate","carMake","car","carModels","TransactionHandle","toReceipt","number","sCode","zipcode","Receipt","toHome","qrcode","qrtext","QRious","element","size","set","foreground","generateQRCode","flexDirection","alignItems","maxWidth","margin","borderRadius","fontSize","paddingLeft","float","lotName","startReservation","endReservation","Confirmation","toTransactionHandle","VehicleModel","now","Date","getTodayAtSpecificHour","hour","minutes","timelineInterval","ReservationDetails","errorHandler","onChangeCallback","selectedInterval","disabledIntervals","start","end","getHours","toUserInfo","format","ticksNumber","onUpdateCallback","Account","App","registerUser","userName","FBUser","userID","navigate","signOut","exact","path","component","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83f0d222.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Parking-Logo.5a95957d.svg\";","module.exports = __webpack_public_path__ + \"static/media/parking.e7595736.geojson\";","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBg4RHnJAGKRxZbuyAxjJEmZ6N8d2mvPY0\",\n    authDomain: \"park-me-web.firebaseapp.com\",\n    databaseURL: \"https://park-me-web.firebaseio.com\",\n    projectId: \"park-me-web\",\n    storageBucket: \"park-me-web.appspot.com\",\n    messagingSenderId: \"696794983879\",\n    appId: \"1:696794983879:web:da7fd98f906dfc77637de2\",\n    measurementId: \"G-FEXGBWQGEY\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export const provider = new firebase.auth.GoogleAuthProvider();\n  export const auth = firebase.auth();\n  export default firebase;","import React, { Component } from \"react\";\r\n// import Logo from \"./Parking-Logo.svg\";\r\nimport Logo from \"./Assets/Parking-Logo.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    const { user, logOutUser } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <nav className=\"site-nav family-sans navbar navbar-expand navbar-dark higher\">\r\n          <style>\r\n            {\r\n              \"\\\r\n        .navbar{\\\r\n          background-color: Black;\\\r\n        }\\\r\n      \"\r\n            }\r\n          </style>\r\n\r\n          <div className=\"container-fluid\">\r\n            <NavLink className=\"navbar-brand\" to=\"/Park-Me\">\r\n              <img src={Logo} width=\"30\" height=\"30\" alt=\"Logo\" />\r\n            </NavLink>\r\n\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <NavLink className=\"nav-item nav-link\" to=\"/account\">\r\n                {\" \"}\r\n                {this.props.user}\r\n              </NavLink>\r\n\r\n              {user == null && (\r\n                <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                  Log In\r\n                </NavLink>\r\n              )}\r\n\r\n              {user == null && (\r\n                <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              )}\r\n              {user && (\r\n                <NavLink\r\n                  className=\"nav-item nav-link\"\r\n                  to=\"/\"\r\n                  onClick={e => logOutUser(e)}\r\n                >\r\n                  Log Out\r\n                </NavLink>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, {Component} from 'react';\n\nclass FormError extends Component {\nrender(){\n    const {theMessage} = this.props;\n    \n    return(\n        <div className=\"col-12 alert alert-danger px-3\">\n            {theMessage}\n        </div>\n        )\n    }\n}\nexport default FormError;","import React, {Component} from 'react';\r\nimport firebase from './Firebase';\r\nimport FormError from './FormError';\r\nimport './App.css';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errorMessage: null\r\n            };\r\n            this.handleChange = this.handleChange.bind(this); //constructor <-handle change\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n\r\n    handleChange(e){        //Collects the value for each item name\r\n\r\n        const itemName = e.target.name;\r\n        const itemValue = e.target.value;\r\n\r\n        this.setState({[itemName]: itemValue});\r\n    }\r\n\r\n    handleSubmit(e){\r\n        var registrationInfo = {\r\n        email: this.state.email,\r\n        password : this.state.password\r\n        }\r\n        \r\n        this.setState({\r\n          toHomePage: true,\r\n//          user: registrationInfo.user,\r\n        });\r\n        \r\n        e.preventDefault();\r\n        //push an authentication event into the fireabse database\r\n\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(\r\n            registrationInfo.email,\r\n            registrationInfo.password\r\n        )\r\n        .then(()=>{\r\n        })\r\n        .catch(error =>{\r\n            if (error.message !== null){\r\n                this.setState({errorMessage: error.message});\r\n                \r\n            } else{\r\n                this.setState({errorMessage: null});\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n      if (this.state.toHomePage === true) {\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/Park-Me\",\r\n              state: this.state.user,\r\n            }}\r\n          />\r\n        );\r\n      }       \r\n        return(\r\n          <form className=\"main-form\" style={{marginTop: \"2%\"}} onSubmit={this.handleSubmit}>\r\n            <div className=\"container\" style={{padding: \"0px\"}} >\r\n              <div className=\"row\" >\r\n                  <div className=\"card bg-light\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"500px\"}}>\r\n                    <div className=\"card-body\">\r\n                      <h3 className=\"font-weight-light mb-3\">Log in</h3>\r\n                      <section className=\"form-group\">\r\n                      {this.state.errorMessage !== null ? (\r\n                                                      <FormError theMessage = {this.state.errorMessage}\r\n                                                      />\r\n                                                      ): null}\r\n                        <label\r\n                          className=\"form-control-label sr-only\"\r\n                          htmlFor=\"Email\">\r\n                          Email\r\n                        </label>\r\n                        <input\r\n                          required\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </section>\r\n                      <section className=\"form-group\">\r\n                        <input\r\n                          required\r\n                          className=\"form-control\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          value={this.state.password}\r\n                          onChange={this.handleChange}\r\n\r\n                        />\r\n                      </section>\r\n                      <div className=\"form-group text-right mb-0\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Log in\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","/* function updateRoute() {\r\n    // Set the searchtem\r\n    var searchtem = \"driving\";\r\n    // Get the coordinates that were drawn on the map\r\n    var data = draw.getAll();\r\n    var lastFeature = data.features.length - 1;\r\n    var coords = data.features[lastFeature].geometry.coordinates;\r\n    // Format the coordinates\r\n    var newCoords = coords.join(';')\r\n    // Set the radius for each coordinate pair to 25 meters\r\n    \r\n   // getMatch(newCoords, radius, searchtem);\r\n  } */\r\n// Make a Map Matching request\r\nimport \"./Mapbox\";\r\nvar querydata;\r\nvar coordinates;\r\nfunction getResults(long, lat) {\r\n  // Create the query\r\n  var query =\r\n    \"https://api.mapbox.com/geocoding/v5/mapbox.places/parking.json?limit=10&proximity=\" +\r\n    long +\r\n    \",\" +\r\n    lat +\r\n    \"&types=poi&&access_token=pk.eyJ1IjoicmFmYWVsaGR6YSIsImEiOiJja2dzeHJjbnMwZzE3MnJtNWV6cHVsam9sIn0.7oigwdpk6AYK5VqUZq3phg\";\r\n  var $ = require(\"jquery\");\r\n  $.ajax({\r\n    method: \"GET\",\r\n    url: query,\r\n  }).done(function (data) {\r\n    // Get the data from the response\r\n    querydata = JSON.stringify(data);\r\n    coordinates = data.features[0].geometry.coordinates;\r\n    // Set  markers of locations on the map\r\n    //console.log(\"The coordinates: \" + coordinates)\r\n    //console.log(\"The data \"+ querydata);\r\n    //addQuery(coordinates)\r\n  });\r\n}\r\n\r\n/* function addQuery(coordinates) {\r\n\r\n  map.addLayer({\r\n      \"id\": \"locations\",\r\n      \"type\": \"symbol\",\r\n      \"source\": {\r\n        \"type\": \"geojson\",\r\n        \"data\": {\r\n          \"type\": \"Feature\",\r\n          \"properties\": {},\r\n          \"geometry\": coordinates\r\n        }\r\n      },\r\n      \"layout\": {\r\n        \"icon-image\": \"parking-15\",\r\n          \"icon-allow-overlap\": true,\r\n      },\r\n    });\r\n  };  */\r\nexport default getResults;\r\nexport { querydata };\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nconst muiTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiSlider: {\r\n      thumb: {\r\n        color: \"#1A2637\",\r\n      },\r\n      track: {\r\n        color: \"1A2637\",\r\n      },\r\n      rail: {\r\n        color: \"black\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n  },\r\n  input: {\r\n    width: 38,\r\n  },\r\n});\r\n\r\nexport default function InputSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(5);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <ThemeProvider theme={muiTheme}>\r\n            <Slider\r\n              value={typeof value === \"number\" ? value : 0}\r\n              onChange={handleSliderChange}\r\n              aria-labelledby=\"input-slider\"\r\n            />\r\n          </ThemeProvider>\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: \"number\",\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\r\nimport \"./App.css\";\r\nimport * as parkingdata from \"./parking.geojson\";\r\nimport getResults from \"./MapboxAJAX\";\r\nimport UserInput from \"./UserInput\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\n//import {querydata} from './MapboxAJAX';\r\n\r\nvar coordinates;\r\nvar $ = require(\"jquery\");\r\n\r\nclass Mapbox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: -84.387,\r\n      lat: 33.749,\r\n      zoom: 13,\r\n      input: \"\",\r\n      geolat: null,\r\n      geolong: null,\r\n      currPage: \"Search\",\r\n      curLat: 0.0,\r\n      curLng: 0.0,\r\n      toReservationDetails: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.buttonRef = React.createRef();\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ toReservationDetails: true });\r\n  }\r\n  componentDidMount(props) {\r\n    mapboxgl.accessToken =\r\n      \"pk.eyJ1IjoibmFkaW1rMSIsImEiOiJja2doaGh5dWowM292MnpudW03MHc2MzdwIn0.TU9JkM8-F3FZ5RKTTO3n9A\";\r\n\r\n    //Mapbox Map View\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: \"mapbox://styles/nadimk1/ckghhntfd19g51ao0zjbqcu65\",\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom,\r\n      limit: 10,\r\n      parkingdata: {},\r\n      bbox: [-84.401037, 33.745468, -84.370436, 33.768017] //min long, min lag, max long, max lat\r\n    });\r\n\r\n    const self = this;\r\n    //Geocoder\r\n    const geocoder = new MapboxGeocoder({\r\n      // Initialize the geocoder\r\n      accessToken: mapboxgl.accessToken, // Set the access token\r\n      mapboxgl: mapboxgl, // Set the mapbox-gl instance\r\n      placeholder: \"Address, Place, City or Venue\",\r\n      marker: false, // Do not use the default marker style\r\n      limit: 10, //limits the search suggestion results\r\n      types: \"poi\",\r\n      //render geocoder for suggested list of items with logo,text and address\r\n      render: function(item) {\r\n        var maki = item.properties.maki || \"marker\";\r\n        {\r\n          return (\r\n            \"<div class='geocoder-dropdown-item'><img class='geocoder-dropdown-icon' src='https://unpkg.com/@mapbox/maki@6.1.0/icons/\" +\r\n            maki +\r\n            \"-15.svg'><span class='geocoder-dropdown-text'> \" +\r\n            item.text +\r\n            \"</span><span class='geocoder-dropdown-text'> <br>\" +\r\n            item.properties.address +\r\n            \"</span></div>\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    // Add the geocoder to the map\r\n    //map.addControl(geocoder);\r\n\r\n    const SearchBox = document.getElementById(\"geocoder\");\r\n    if (SearchBox != null) {\r\n      SearchBox.appendChild(geocoder.onAdd(map));\r\n    }\r\n    // document.getElementById(\"geocoder\").appendChild(geocoder.onAdd(map));\r\n\r\n    //Locate button\r\n    map.addControl(\r\n      new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n          enableHighAccuracy: true\r\n        },\r\n        trackUserLocation: true,\r\n        showUserLocation: true,\r\n        showAccuracyCircle: true\r\n      })\r\n    );\r\n\r\n    // After the map style has loaded on the page,\r\n    // add a source layer and default styling for a single point\r\n    map.on(\"load\", function() {\r\n      /*       map.addSource(\"locations\", {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"FeatureCollection\",\r\n          features: [],\r\n        },\r\n      }); */\r\n      //add single point mark for geocoder result\r\n      /*  map.addLayer({\r\n        id: \"point\",\r\n        source: \"single-point\",\r\n        type: \"symbol\",\r\n        layout: {\r\n          \"icon-image\": \"parking-15\",\r\n          \"icon-allow-overlap\": true,\r\n        },\r\n      }); */\r\n\r\n      //     add parking spots from json file\r\n\r\n      //   map.addLayer({\r\n      //   id: \"parkingpoints\",\r\n      //   type: \"symbol\",\r\n      //    /* Add a GeoJSON source containing place coordinates and information. */\r\n      //    source: \"locations\",\r\n      //    layout: {\r\n      //      \"icon-image\": \"parking-15\",\r\n      //      \"icon-allow-overlap\": true,\r\n      //    },\r\n      //  });\r\n      map.on(\"click\", \"locations\", function(e) {\r\n        var coordinates = e.features[0].geometry.coordinates.slice();\r\n        var address = e.features[0].properties.address;\r\n        var place_name = e.features[0].place_name;\r\n        // Ensure that if the map is zoomed out such that multiple\r\n        //copies of the feature are visible, the popup appears\r\n        //over the copy being pointed to.\r\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n        }\r\n\r\n        new mapboxgl.Popup()\r\n          .setLngLat(coordinates)\r\n          .setHTML(\"<h3>\" + place_name + \"</h3>\" + \"<p>\" + address + \"</p><br><p>Price: $\" + this.state.pData.price + \"/hr</p>\")\r\n          .addTo(map);\r\n      });\r\n      // Change the cursor to a pointer when the mouse is over the places layer.\r\n      map.on(\"mouseenter\", \"locations\", function() {\r\n        map.getCanvas().style.cursor = \"pointer\";\r\n      });\r\n\r\n      //        Change it back to a pointer when it leaves.\r\n      map.on(\"mouseleave\", \"locations\", function() {\r\n        map.getCanvas().style.cursor = \"\";\r\n      });\r\n\r\n      //take location input from geocoder and place markers at the 10 closest\r\n      // parking lots from entered location\r\n      geocoder.on(\"result\", function(result) {\r\n        $(\".marker\").remove();\r\n        $(\".Main-Marker\").remove();\r\n        // create div for the marker\r\n        var mainMarker = document.createElement(\"div\");\r\n        mainMarker.className = \"Main-Marker\";\r\n\r\n        // add marker to map\r\n        new mapboxgl.Marker(mainMarker)\r\n          .setLngLat(result.result.geometry.coordinates)\r\n          .addTo(map);\r\n\r\n        // create the query\r\n        var query =\r\n          \"https://api.mapbox.com/geocoding/v5/mapbox.places/parking.json?limit=10&proximity=\" +\r\n          result.result.geometry.coordinates[0] +\r\n          \",\" +\r\n          result.result.geometry.coordinates[1] +\r\n          \"&types=poi&&access_token=pk.eyJ1IjoicmFmYWVsaGR6YSIsImEiOiJja2dzeHJjbnMwZzE3MnJtNWV6cHVsam9sIn0.7oigwdpk6AYK5VqUZq3phg\";\r\n\r\n        $.ajax({\r\n          method: \"GET\",\r\n          url: query\r\n        }).done(function(data) {\r\n          console.log(\"data: \", data);\r\n          // Get the data from the response\r\n          coordinates = data.features[0].geometry.coordinates;\r\n          // Set  markers of locations on the map\r\n          console.log(\"The coordinates: \" + coordinates);\r\n\r\n          data.features.forEach(function(marker, props) {\r\n            // create a DOM element for the marker\r\n            var el = document.createElement(\"div\");\r\n            el.className = \"marker\";\r\n\r\n            var address =\r\n              marker.properties.address == undefined\r\n                ? marker.place_name.substring(\r\n                    marker.place_name.indexOf(\",\") + 1\r\n                  )\r\n                : marker.properties.address;\r\n\r\n            var directBtn = document.createElement(\"div\");\r\n\r\n            // reactDom.render(<Redirect to={{\r\n            //   pathname: \"/reserve\",\r\n            //   state: {name: marker.text.toUpperCase(), parkingAddress: address, spots: \"5\" }\r\n            // }},directBtn );\r\n\r\n            var pData = {\r\n              name: marker.text.toUpperCase(),\r\n              hours: {\r\n                opening: Math.floor((Math.random() * 3)+7),\r\n                closing: Math.floor((Math.random() * 5)+5)\r\n              },\r\n              price: Math.floor((Math.random() * 11)+3),\r\n              address: address,\r\n              availablespots:  Math.floor((Math.random() * 16)),\r\n    \r\n            };\r\n\r\n            var description = `<h1>Hello World!</h1> \r\n            <button className=\"btn\" ref=${self.buttonRef.current}>todo</button>`;\r\n            var popupInfo =\r\n              '<h1 id=\"popupTitle\">' +\r\n              marker.text.toUpperCase() +\r\n              \"</h1>\" +\r\n              '<p id=\"popupDetails\" >' +\r\n              address +\r\n              \"</p>\" +\r\n              '<p id=\"popupDetails\">Price: $' + pData.price + '</p>' +\r\n              '<div id=\"aContainer\"><a style=\"background-color: #1A2637;border-color: white;font-family:\"Roboto Slab\";\" class=\"btn btn-primary\" href=\"/reserve\"> RESERVE </a></div>';\r\n            // var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(description);\r\n            var popup = new mapboxgl.Popup()\r\n              .setLngLat([-96, 37.8])\r\n              .setHTML(\r\n                `<h1 id=\"popupTitle\"> ${marker.text.toUpperCase()} </h1><p id=\"popupDetails\" >${address}</p><p id=\"popupDetails\">Available Spots: ${pData.availablespots}</p>\r\n                <p id=\"popupDetails\">Price: $${pData.price}/hr </p>\r\n                <p id=\"popupDetails\">Hours: ${pData.hours.opening}AM-${pData.hours.closing}PM</p><div id=\"aContainer\">\r\n                \r\n\r\n                <button style=\"background-color: #1A2637;font-family:\"Roboto Slab\";border-color: white;\" Name=\"btn\" class=\"btn btn-primary\" ref=${\r\n      self.buttonRef.current\r\n    }>RESERVE</button></div>`\r\n              )\r\n              .addTo(map);\r\n            const btn = document.getElementsByName(\"btn\")[0];\r\n            btn.addEventListener(\"click\", self.handleClick);\r\n\r\n            // add marker to map\r\n            new mapboxgl.Marker(el)\r\n              .setLngLat(marker.geometry.coordinates)\r\n              .setPopup(popup)\r\n              .addTo(map)\r\n              .getElement()\r\n              .addEventListener(\"click\", () => {\r\n                self.setState({\r\n                  pData: {name: pData.name,\r\n                    hours: {\r\n                      opening: pData.hours.opening,\r\n                      closing: pData.hours.closing +12,\r\n                    },\r\n                    price: pData.price,\r\n                    address: pData.address,\r\n                    availablespots:  pData.availablespots,\r\n                }});\r\n              });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toReservationDetails === true) {\r\n      return (\r\n        <div>{console.log(\"pData: \", this.state.pData)}\r\n        <Redirect\r\n        to={{\r\n          pathname: \"/reservationdetails\",\r\n          state: { parkingData: this.state.pData }\r\n        }}\r\n      /></div>\r\n        \r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\" id=\"input-side\">\r\n            <UserInput />\r\n          </div>\r\n          <div ref={el => (this.mapContainer = el)} className=\"col-lg-8\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mapbox;\r\n","import React, { Component, useState } from \"react\";\r\nimport Slider from \"./Slider.js\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { flexbox } from \"@material-ui/system\";\r\n\r\nclass UserInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 id=\"Title\">Where Do You Want To Go?</h1>\r\n        <div\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            width: \"55%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <div id=\"geocoder\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInput;\r\n// function UserInput(props) {\r\n//   const [currPage, setCurrPage] = useState([\"Search\"]);\r\n\r\n//   function changePage() {\r\n//     console.log(\"changePage | \", currPage);\r\n//     if (currPage == \"Search\") {\r\n//       setCurrPage(\"Slider\");\r\n//       console.log(\"after change: \", currPage);\r\n//       console.log(document.getElementById(\"geocoder\"));\r\n//     } else if (currPage == \"Slider\") {\r\n//       setCurrPage(\"Search\");\r\n//       console.log(\"after change:\", currPage);\r\n//       console.log(document.getElementById(\"geocoder\"));\r\n//     }\r\n//   }\r\n\r\n//   //Search bar input | for address\r\n//   function SearchInput(props) {\r\n//     return (\r\n//       <div>\r\n//         <h1 id=\"Title\">Where Do You Want To Go?</h1>\r\n//         <div\r\n//           style={{\r\n//             marginLeft: \"auto\",\r\n//             marginRight: \"auto\",\r\n//             width: \"55%\",\r\n//             textAlign: \"center\",\r\n//           }}\r\n//         >\r\n//           <div id=\"geocoder\"></div>\r\n//         </div>\r\n\r\n//         <Button\r\n//           variant=\"secondary\"\r\n//           style={{\r\n//             marginTop: \"20px\",\r\n//             backgroundColor: \"#1A2637\",\r\n//             width: \"100px\",\r\n//             padding: \"8px\",\r\n//             fontfamily: \"Roboto Slab\",\r\n//           }}\r\n//           onClick={changePage}\r\n//         >\r\n//           GO\r\n//         </Button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   //slider input | for search range\r\n//   function SliderPage(props) {\r\n//     return (\r\n//       <div>\r\n//         <h1 id=\"Title\">What is your radius?</h1>\r\n//         <div\r\n//           style={{\r\n//             marginLeft: \"auto\",\r\n//             marginRight: \"auto\",\r\n//             width: \"50%\",\r\n//             textAlign: \"center\",\r\n//           }}\r\n//         >\r\n//           <Slider />\r\n\r\n//           <Button\r\n//             variant=\"secondary\"\r\n//             style={{\r\n//               marginTop: \"20px\",\r\n//               backgroundColor: \"#1A2637\",\r\n//               width: \"100px\",\r\n//               padding: \"8px\",\r\n//               fontfamily: \"Roboto Slab\",\r\n//             }}\r\n//             onClick={changePage}\r\n//           >\r\n//             GO\r\n//           </Button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   //controls viewable component | conditional components\r\n//   function InputPage(props) {\r\n//     console.log(currPage);\r\n//     if (currPage == \"Search\") {\r\n//       console.log(\"search page\");\r\n//       return <SearchInput />;\r\n//     }\r\n//     return <SliderPage />;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <InputPage />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default UserInput;\r\n","import React, {Component} from 'react';\r\nimport FormError from './FormError';\r\nimport firebase from './Firebase'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nvar database = firebase.database();\r\nvar ref = database.ref('users');\r\nvar data = {\r\n    DB_user: \"\",\r\n    DB_lname: \"\",\r\n    DB_email: \"\",\r\n    DB_phonenumber: \"\",\r\n    DB_userID: \"\"\r\n}\r\n\r\nclass Register extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            lname:'',\r\n            email: '',\r\n            phonenumber:'',\r\n            passOne: '',\r\n            passTwo: '',\r\n            errorMessage: null,\r\n           \r\n            };\r\n            \r\n        this.handleChange = this.handleChange.bind(this); //constructor <-handle change\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n    \r\n    handleChange(e){        //Collects the value for each item name\r\n    \r\n        const itemName = e.target.name;\r\n        const itemValue = e.target.value;\r\n\r\n        this.setState({[itemName]: itemValue}, () => {\r\n         if (this.state.passOne !== this.state.passTwo){\r\n             this.setState({errorMessage:'Passwords do not match'});\r\n         }   \r\n         else {\r\n             this.setState({errorMessage: null});\r\n         }\r\n        });\r\n    }    \r\n\r\n    handleSubmit(e){\r\n\r\n        var registrationInfo = {\r\n        user : this.state.user, \r\n        lname: this.state.lname,\r\n        email: this.state.email,\r\n        phonenumber : this.state.phonenumber,\r\n        passOne : this.state.passOne\r\n        }\r\n        \r\n        data.DB_user = this.state.user;\r\n        data.DB_lname = this.state.lname;\r\n        data.DB_email = this.state.email;\r\n        data.DB_phonenumber = this.state.phonenumber;\r\n        \r\n        console.log(\"registrationInfo: \", registrationInfo);\r\n\r\n        this.setState({\r\n            toHomePage: true,\r\n            user: registrationInfo.user,\r\n          });\r\n        e.preventDefault();\r\n        \r\n        //push an authentication event into the fireabse database        \r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(\r\n            registrationInfo.email,\r\n            registrationInfo.passOne\r\n        )\r\n        .then(function() {\r\n            if (firebase.auth().currentUser != null) {\r\n                firebase.auth().currentUser.updateProfile({\r\n                    displayName: registrationInfo.user\r\n                }).then(function() { \r\n                    firebase.auth().onAuthStateChanged(profile => {\r\n                        var userid = String(profile.uid)\r\n                        console.log(\"  Provider-specific UID: \" + userid);\r\n                        data.DB_userID = userid; \r\n                        ref.push(data)\r\n                    });\r\n                }, function (error){\r\n                    console.log(\"Error happened\" + error);\r\n                });\r\n            }\r\n        });\r\n    }\r\n            \r\n    render(){ \r\n        if (this.state.toHomePage === true) {\r\n            \r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/Park-Me\",    \r\n                  state: this.state.user,\r\n                }}\r\n              />\r\n            );\r\n          }       \r\n        return (\r\n            <form className=\"main-form\" style={{marginTop: \"2%\"}} onSubmit={this.handleSubmit}>\r\n                <div className=\"container\" style={{padding: \"0px\"}}>\r\n                    <div className=\"row\">\r\n                            <div className=\"card bg-light\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"650px\"}}>\r\n                                <div className=\"card-body\">\r\n                                    <h3 className=\"font-weight-light mb-3\">Register</h3>\r\n                                    <div className=\"form-row\">\r\n                                            {this.state.errorMessage !== null ? (\r\n                                            <FormError \r\n                                            theMessage = {this.state.errorMessage}\r\n                                            />\r\n                                            ): null}\r\n                                        <section className=\"col-sm-6 form-group\">\r\n                                            <label\r\n                                                className=\"form-control-label sr-only\"\r\n                                                htmlFor=\"user\"\r\n                                            >\r\n                                                Name\r\n                                            </label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                id=\"user\"\r\n                                                placeholder=\"First Name\"\r\n                                                name=\"user\"\r\n                                                required\r\n                                                value = {this.state.user}\r\n                                                onChange = {this.handleChange}\r\n                                                />\r\n                                        </section>\r\n                                        <section className=\"col-sm-6 form-group\">\r\n                                            <label\r\n                                                className=\"form-control-label sr-only\"\r\n                                                htmlFor=\"lname\"\r\n                                            >\r\n                                                Last Name\r\n                                            </label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                id=\"lname\"\r\n                                                placeholder=\"Last Name\"\r\n                                                name=\"lname\"\r\n                                                required\r\n                                                value = {this.state.lname}\r\n                                                onChange = {this.handleChange}\r\n                                                />\r\n                                        </section>\r\n                                    </div>\r\n                                    <section className=\"form-group\">\r\n                                        <label\r\n                                            className=\"form-control-label sr-only\"\r\n                                            htmlFor=\"email\"\r\n                                        >\r\n                                            Email\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            required\r\n                                            name=\"email\" \r\n                                            value = {this.state.email}\r\n                                                onChange = {this.handleChange}\r\n                                            />\r\n                                    </section>\r\n                                    <section className=\"form-group\">\r\n                                        <label\r\n                                            className=\"form-control-label sr-only\"\r\n                                            htmlFor=\"phonenumber\"\r\n                                        >\r\n                                            PhoneNumber\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"tel\"\r\n                                            id=\"phonenumber\"\r\n                                            placeholder=\"Phone Number\"\r\n                                            required\r\n                                            name=\"phonenumber\" \r\n                                            value = {this.state.phonenumber}\r\n                                                onChange = {this.handleChange}\r\n                                            />\r\n                                    </section>\r\n                                    <div className=\"form-row\">\r\n                                        <section className=\"col-sm-6 form-group\">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"password\"\r\n                                                name=\"passOne\"\r\n                                                placeholder=\"Password\" \r\n                                                value = {this.state.passOne}\r\n                                                onChange = {this.handleChange}\r\n                                                />\r\n                                        </section>\r\n                                        <section className=\"col-sm-6 form-group\">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                type=\"password\"\r\n                                                required\r\n                                                name=\"passTwo\"\r\n                                                placeholder=\"Retype Password\" \r\n                                                value = {this.state.passTwo}\r\n                                                onChange = {this.handleChange}\r\n                                                />\r\n                                        </section>\r\n                                    </div>\r\n                                    <div className=\"form-group text-right mb-0\">\r\n                                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                                                Register\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n    }\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getMatches, isValid } from \"driver-license-validator\";\r\n\r\nvar validation = function(inputString, regex, me) {\r\n  var alpha = true;\r\n  console.log(\"regex: \", regex);\r\n  if (regex === \"license\") {\r\n    console.log(\"inside license: \", inputString);\r\n    return isValid(inputString);\r\n  }\r\n  for (var i = 0; i < inputString.length; i++) {\r\n    if (!regex.test(inputString.charAt(i))) {\r\n      return false;\r\n    } else {\r\n      continue;\r\n    }\r\n  }\r\n  return alpha;\r\n};\r\n\r\nclass UserInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n      license: \"\",\r\n      state: \"\",\r\n      finalRegistrationInfo: {},\r\n      toVehicleDetails: false,\r\n      errorMessage: null\r\n    };\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSelect(e) {\r\n    this.setState({\r\n      state: e.target.value\r\n    });\r\n  }\r\n  handleChange(e) {\r\n    //Collects the value for each item name\r\n\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n    var me = this;\r\n    if (\r\n      validation(this.state.user, /^[a-zA-Z -]*$/i) == false &&\r\n      itemName == \"user\"\r\n    ) {\r\n      console.log(\"first | \", itemName);\r\n      this.setState({\r\n        errorMessage:\r\n          'Incorrect format for First Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\r\n      });\r\n    } else if (\r\n      validation(this.state.lname, /^[a-zA-Z -]*$/i) == false &&\r\n      itemName == \"lname\"\r\n    ) {\r\n      console.log(\"second | \", itemName);\r\n      this.setState({\r\n        errorMessage:\r\n          'Incorrect format for Last Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\r\n      });\r\n    } else if (\r\n      validation(this.state.license, \"license\", me) == false &&\r\n      itemName == \"license\"\r\n    ) {\r\n      console.log(\"third | \", itemName);\r\n      this.setState({\r\n        errorMessage:\r\n          'Incorrect format for License. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMessage: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var registrationInfo = {\r\n      user: this.state.user,\r\n      lname: this.state.lname,\r\n      email: this.state.email,\r\n      phonenumber: this.state.phonenumber,\r\n      license: this.state.license,\r\n      state: this.state.state,\r\n      parkingData: this.props.location.state.parkingData\r\n    };\r\n    console.log(\"registrationInfo: \", registrationInfo);\r\n    this.setState({\r\n      toVehicleDetails: true,\r\n      finalRegistrationInfo: registrationInfo\r\n    });\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toVehicleDetails === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/vehicleDetails\",\r\n            state: this.state.finalRegistrationInfo\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <form\r\n        className=\"main-form\"\r\n        style={{ marginTop: \"2%\" }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div className=\"container\" style={{ padding: \"0px\" }}>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"card bg-light\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"650px\"\r\n              }}\r\n            >\r\n              <div className=\"card-body\">\r\n                <h3 className=\"font-weight-light mb-3\">\r\n                  Let's get some details\r\n                </h3>\r\n                <div className=\"form-row\">\r\n                  {this.state.errorMessage !== null ? (\r\n                    <FormError theMessage={this.state.errorMessage} />\r\n                  ) : null}\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"user\"\r\n                    >\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"user\"\r\n                      placeholder=\"First Name\"\r\n                      name=\"user\"\r\n                      required\r\n                      value={this.state.user}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"lname\"\r\n                    >\r\n                      Last Name\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      placeholder=\"Last Name\"\r\n                      name=\"lname\"\r\n                      required\r\n                      value={this.state.lname}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                </div>\r\n                <section className=\"form-group\">\r\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    required\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </section>\r\n                <section className=\"form-group\">\r\n                  <label\r\n                    className=\"form-control-label sr-only\"\r\n                    htmlFor=\"phonenumber\"\r\n                  >\r\n                    PhoneNumber\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"tel\"\r\n                    id=\"phonenumber\"\r\n                    placeholder=\"phone number\"\r\n                    required\r\n                    name=\"phonenumber\"\r\n                    value={this.state.phonenumber}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </section>\r\n                <div className=\"form-row\">\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"license\"\r\n                      placeholder=\"License Number\"\r\n                      value={this.state.license}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <select\r\n                      name=\"state\"\r\n                      className=\"custom-select mr-sm-2\"\r\n                      value={this.state.state}\r\n                      onChange={this.handleSelect}\r\n                    >\r\n                      <option value=\"AL\">Alabama</option>\r\n                      <option value=\"AK\">Alaska</option>\r\n                      <option value=\"AZ\">Arizona</option>\r\n                      <option value=\"AR\">Arkansas</option>\r\n                      <option value=\"CA\">California</option>\r\n                      <option value=\"CO\">Colorado</option>\r\n                      <option value=\"CT\">Connecticut</option>\r\n                      <option value=\"DE\">Delaware</option>\r\n                      <option value=\"DC\">District of Columbia</option>\r\n                      <option value=\"FL\">Florida</option>\r\n                      <option value=\"GA\">Georgia</option>\r\n                      <option value=\"HI\">Hawaii</option>\r\n                      <option value=\"ID\">Idaho</option>\r\n                      <option value=\"IL\">Illinois</option>\r\n                      <option value=\"IN\">Indiana</option>\r\n                      <option value=\"IA\">Iowa</option>\r\n                      <option value=\"KS\">Kansas</option>\r\n                      <option value=\"KY\">Kentucky</option>\r\n                      <option value=\"LA\">Louisiana</option>\r\n                      <option value=\"ME\">Maine</option>\r\n                      <option value=\"MD\">Maryland</option>\r\n                      <option value=\"MA\">Massachusetts</option>\r\n                      <option value=\"MI\">Michigan</option>\r\n                      <option value=\"MN\">Minnesota</option>\r\n                      <option value=\"MS\">Mississippi</option>\r\n                      <option value=\"MO\">Missouri</option>\r\n                      <option value=\"MT\">Montana</option>\r\n                      <option value=\"NE\">Nebraska</option>\r\n                      <option value=\"NV\">Nevada</option>\r\n                      <option value=\"NH\">New Hampshire</option>\r\n                      <option value=\"NJ\">New Jersey</option>\r\n                      <option value=\"NM\">New Mexico</option>\r\n                      <option value=\"NY\">New York</option>\r\n                      <option value=\"NC\">North Carolina</option>\r\n                      <option value=\"ND\">North Dakota</option>\r\n                      <option value=\"OH\">Ohio</option>\r\n                      <option value=\"OK\">Oklahoma</option>\r\n                      <option value=\"OR\">Oregon</option>\r\n                      <option value=\"PA\">Pennsylvania</option>\r\n                      <option value=\"RI\">Rhode Island</option>\r\n                      <option value=\"SC\">South Carolina</option>\r\n                      <option value=\"SD\">South Dakota</option>\r\n                      <option value=\"TN\">Tennessee</option>\r\n                      <option value=\"TX\">Texas</option>\r\n                      <option value=\"UT\">Utah</option>\r\n                      <option value=\"VT\">Vermont</option>\r\n                      <option value=\"VA\">Virginia</option>\r\n                      <option value=\"WA\">Washington</option>\r\n                      <option value=\"WV\">West Virginia</option>\r\n                      <option value=\"WI\">Wisconsin</option>\r\n                      <option value=\"WY\">Wyoming</option>\r\n                    </select>\r\n                  </section>\r\n                </div>\r\n                <div className=\"form-group text-right mb-0\">\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#1A2637\",\r\n                      borderColor: \"white\",\r\n                      fontFamily: \"Roboto Slab\"\r\n                    }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n\r\n//first&last name: /^[a-zA-Z -]*$/i\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport carMake from \"./Data/CarMake.json\";\r\nimport carModels from \"./Data/CarModels.json\";\r\n\r\n// console.log(\"make: \", carMake);\r\n// console.log(\"models: \", carModels);\r\n\r\nvar validation = function(inputString, regex, me) {\r\n  var alpha = true;\r\n  for (var i = 0; i < inputString.length; i++) {\r\n    if (!regex.test(inputString.charAt(i))) {\r\n      return false;\r\n    } else {\r\n      continue;\r\n    }\r\n  }\r\n  return alpha;\r\n};\r\n\r\nconst years = Array.from(new Array(80), (val, index) =>\r\n  (2020 - index).toString()\r\n);\r\n\r\nclass VehicleDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.location.state);\r\n    this.state = {\r\n      user: this.props.location.state.user,\r\n      lname: this.props.location.state.lname,\r\n      email: this.props.location.state.email,\r\n      phonenumber: this.props.location.state.phonenumber,\r\n      license: this.props.location.state.license,\r\n      state: this.props.location.state.state,\r\n      make: \"\",\r\n      model: \"\",\r\n      year: \"\",\r\n      color: \"\",\r\n      plate: \"\",\r\n      finalRegistrationInfo: {},\r\n      toConfirmation: false,\r\n      errorMessage: null\r\n    };\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSelect(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue }, ()=>{\r\n      console.log()\r\n      if(validation(this.state.plate, /^[^+_=/*?@#$%&()'\"|â„;:{}.,`~<>}{][^\\\\]{1,20}/i) == false){\r\n        this.setState({error: \"Incorrect License Plate Number. Please try again\"})\r\n      }\r\n    });\r\n\r\n    // this.setState({\r\n    //   make: e.target.value\r\n    // });\r\n  }\r\n\r\n  handleChange(e) {\r\n    //Collects the value for each item name\r\n\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var registrationInfo = {\r\n      user: this.state.user,\r\n      lname: this.state.lname,\r\n      email: this.state.email,\r\n      phonenumber: this.state.phonenumber,\r\n      license: this.state.license,\r\n      state: this.state.state,\r\n      parkingData: this.props.location.state.parkingData,\r\n      vehicleMake: this.state.make,\r\n      vehicleModel: this.state.model,\r\n      vehicleYear: this.state.year,\r\n      vehicleColor: this.state.color,\r\n      vehiclePlate: this.state.plate\r\n    };\r\n    console.log(\"registrationInfo: \", registrationInfo);\r\n    this.setState({\r\n      toConfirmation: true,\r\n      finalRegistrationInfo: registrationInfo\r\n    });\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toConfirmation === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/confirmation\",\r\n            state: this.state.finalRegistrationInfo\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <form\r\n        className=\"main-form\"\r\n        style={{ marginTop: \"2%\" }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div className=\"container\" style={{ padding: \"0px\" }}>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"card bg-light\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"650px\"\r\n              }}\r\n            >\r\n              <div className=\"card-body\">\r\n                <h3 className=\"font-weight-light mb-3\">\r\n                  Tell us about that ride\r\n                </h3>\r\n                <div className=\"form-row\">\r\n                  {this.state.errorMessage !== null ? (\r\n                    <FormError theMessage={this.state.errorMessage} />\r\n                  ) : null}\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <select\r\n                      name=\"make\"\r\n                      className=\"custom-select my-1 mr-sm-2\"\r\n                      value={this.state.make}\r\n                      onChange={this.handleSelect}\r\n                    >\r\n                      {carMake.map(car => (\r\n                        <option value={car}>{car}</option>\r\n                      ))}\r\n                    </select>\r\n                  </section>\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <select\r\n                      name=\"year\"\r\n                      className=\"custom-select my-1 mr-sm-2\"\r\n                      value={this.state.year}\r\n                      onChange={this.handleSelect}\r\n                    >\r\n                      {years.map(year => (\r\n                        <option value={year}>{year}</option>\r\n                      ))}\r\n                    </select>\r\n                  </section>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <select\r\n                      name=\"model\"\r\n                      className=\"custom-select mr-sm-2\"\r\n                      value={this.state.model}\r\n                      onChange={this.handleSelect}\r\n                    >\r\n                      {console.log(\"make: \", carModels)}\r\n                      {this.state.make != null\r\n                        ? carModels.forEach(make => {\r\n                            if (this.state.make === make[\"brand\"]) {\r\n                              make[\"models\"].map(model => (\r\n                                <div>\r\n                                  {console.log(\"inside\")}\r\n                                <option id=\"makeID\" value={model}>{model}</option>\r\n                                </div>\r\n                              ));\r\n                            }\r\n                          })\r\n                        : this.setState({\r\n                            error: \"please select a make first\"\r\n                          })}\r\n                    </select>\r\n                  </section>\r\n\r\n                  <section className=\"form-group col-sm-6\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"phonenumber\"\r\n                    >\r\n                      color\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"phonenumber\"\r\n                      placeholder=\"Color\"\r\n                      required\r\n                      name=\"color\"\r\n                      value={this.state.color}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                </div>\r\n\r\n                <section className=\"form-group\">\r\n                  <label\r\n                    className=\"form-control-label sr-only\"\r\n                    htmlFor=\"phonenumber\"\r\n                  >\r\n                    LicensePlateNumber\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"LicensePlateNumber\"\r\n                    placeholder=\"License Plate Number\"\r\n                    required\r\n                    name=\"plate\"\r\n                    value={this.state.plate}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </section>\r\n\r\n                <div className=\"form-group text-right mb-0\">\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#1A2637\",\r\n                      borderColor: \"white\",\r\n                      fontFamily: \"Roboto Slab\"\r\n                    }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VehicleDetails;\r\n\r\n// this.props.location.state.property\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass TransactionHandle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n      license: \"\",\r\n      state: \"\",\r\n      finalRegistrationInfo: this.props.location.state.finalRegistrationInfo,\r\n      toReceipt: false,\r\n      errorMessage: null,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    //Collects the value for each item name\r\n\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var registrationInfo = {\r\n      user: this.props.location.state.user,\r\n      lname: this.props.location.state.lname,\r\n      email: this.props.location.state.email,\r\n      phonenumber: this.props.location.state.phonenumber,\r\n      license: this.props.location.state.license,\r\n      state: this.props.location.state.state,\r\n      parkingData: this.props.location.state.parkingData,\r\n      vehicleMake: this.props.location.state.vehicleMake,\r\n      vehicleModel: this.props.location.state.vehicleModel,\r\n      vehicleYear: this.props.location.state.vehicleYear,\r\n      vehicleColor: this.props.location.state.vehicleColor,\r\n      vehiclePlate: this.props.location.state.vehiclePlate\r\n    };\r\n    this.setState({\r\n      toReceipt: true,\r\n      finalRegistrationInfo: registrationInfo,\r\n    });\r\n    console.log(\"finalRegistrationInfo: \", this.state.finalRegistrationInfo)\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toReceipt === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/receipt\",\r\n            state: this.state,\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <form\r\n        className=\"main-form\"\r\n        style={{ marginTop: \"2%\" }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <div className=\"container\" style={{ padding: \"0px\" }}>\r\n          <div className=\"row\">\r\n            {console.log(\r\n              \"finalRegistrationInfo: \",\r\n              this.props.location.state\r\n            )}\r\n            <div\r\n              className=\"card bg-light\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"650px\",\r\n              }}\r\n            >\r\n              <div className=\"card-body\">\r\n                <h3 className=\"font-weight-light mb-3\">\r\n                  Let's get some details\r\n                </h3>\r\n                <div className=\"form-row\">\r\n                  {this.state.errorMessage !== null ? (\r\n                    <FormError theMessage={this.state.errorMessage} />\r\n                  ) : null}\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"user\"\r\n                    >\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"user\"\r\n                      placeholder=\"First Name\"\r\n                      name=\"user\"\r\n                      required\r\n                      value={this.state.user}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"lname\"\r\n                    >\r\n                      Last Name\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      placeholder=\"Last Name\"\r\n                      name=\"lname\"\r\n                      required\r\n                      value={this.state.lname}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                </div>\r\n                <section className=\"form-group\">\r\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    placeholder=\"Credit Card Number\"\r\n                    required\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </section>\r\n                <div className=\"form-row\">\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"sCode\"\r\n                      placeholder=\"Security Code\"\r\n                      value={this.state.sCode}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"col-sm-6 form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"zipcode\"\r\n                      placeholder=\"Zipcode\"\r\n                      value={this.state.zipcode}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                </div>\r\n                <div className=\"form-group text-right mb-0\">\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#1A2637\",\r\n                      borderColor: \"white\",\r\n                      fontFamily: \"Roboto Slab\",\r\n                    }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionHandle;\r\n\r\n// this.props.location.state.property\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport QRious from 'qrious';\r\n\r\nclass Receipt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n      license: \"\",\r\n      state: \"\",\r\n      finalRegistrationInfo: this.props.location.state.finalRegistrationInfo,\r\n      toHome: false,\r\n      errorMessage: null,\r\n      qrcode: 'default'\r\n    };\r\n    console.log(this.props.location.state.finalRegistrationInfo)\r\n\r\n    console.log(this.props.location.state)\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleClick(e){\r\n    this.setState({toHome: true})\r\n  }\r\n  handleChange(e) {\r\n    //Collects the value for each item name\r\n\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var registrationInfo = {\r\n      user: this.state.user,\r\n      lname: this.state.lname,\r\n      email: this.state.email,\r\n      phonenumber: this.state.phonenumber,\r\n      passOne: this.state.passOne,\r\n      license: this.state.license,\r\n      state: this.state.state,\r\n      \r\n    };\r\n    this.setState({\r\n      toVehicleDetails: true,\r\n      finalRegistrationInfo: registrationInfo,\r\n    });\r\n    console.log(registrationInfo);\r\n    e.preventDefault();\r\n  }\r\n  \r\n  render(qrcode) {\r\n    if (this.state.toHome === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/Park-Me\"\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    function generateQRCode(qrcode) {\r\n      var qrtext = qrcode;\r\n      console.log(\"qrcode:\", qrtext);\r\n      var qr = new QRious({\r\n        element: document.getElementById('qr-code'),\r\n        size: 200,\r\n        value: 'https://studytonight.com'\r\n    });\r\n  \r\n      qr.set({\r\n          foreground: 'black',\r\n          size: 200,\r\n          value: qrtext\r\n      });\r\n  }\r\n    generateQRCode(qrcode);\r\n    return (\r\n      <div>\r\n        \r\n    \r\n    <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#1A2637\",\r\n          maxWidth: \"fit-content\",\r\n          margin: \"10px auto\",\r\n          padding: \"20px\",\r\n          borderRadius: \"10px\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontFamily: \"Roboto Slab\",\r\n            color: \"white\",\r\n            fontSize: \"1.2rem\",\r\n            margin: \"20px 0\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\r\n            Thank You for Your Reservation!\r\n          </h1>\r\n          <canvas id=\"qr-code\"></canvas>\r\n\r\n          <hr style={{backgroundColor: \"white\"}}/>\r\n          <div style={{paddingLeft: \"auto\", paddingLeft: \"10%\"}}>\r\n          <div style={{textAlign: \"left\", float: \"left\"}}>\r\n            <h3><u>About You</u></h3>\r\n          <p>\r\n            Name:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.user).toUpperCase() +\r\n              \" \" +\r\n              (this.props.location.state.finalRegistrationInfo.lname).toUpperCase()}\r\n          </p>\r\n          <p>\r\n            Email:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.email)}\r\n          </p>\r\n          <p>\r\n            Phone Number:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.phonenumber)}\r\n          </p>\r\n          <p>\r\n            License Number:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.license)}\r\n          </p>\r\n          <p>\r\n            State:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.state)}\r\n          </p>\r\n          </div>\r\n          <div style={{textAlign: \"left\", float: \"left\", marginLeft: \"20px\"}}>\r\n            <h3><u>Vehicle</u></h3>\r\n          <p>\r\n            Make:{\" \"}\r\n            {this.props.location.state.finalRegistrationInfo.vehicleMake}\r\n          </p>\r\n          <p>\r\n            model:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.vehicleModel)}\r\n          </p>\r\n          <p>\r\n            year:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.vehicleYear)}\r\n          </p>\r\n          <p>\r\n            Color:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.vehicleColor)}\r\n          </p>\r\n          <p>\r\n            License Plate:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.vehiclePlate)}\r\n          </p>\r\n          </div>\r\n          <div style={{textAlign: \"left\", float: \"left\", marginLeft: \"40px\", marginRight: \"auto\", width: \"30%\"}}>\r\n            <h3><u>Reservation</u></h3>\r\n          <p>\r\n            Name:{\" \"}\r\n            {this.props.location.state.finalRegistrationInfo.parkingData.lotName}\r\n          </p>\r\n          <p>\r\n            Hours:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.parkingData.hours.opening + \":00 am to \" + (this.props.location.state.finalRegistrationInfo.parkingData.hours.closing -12) + \":00 pm\")}\r\n          </p>\r\n          <p>\r\n            Address:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.parkingData.address)}\r\n          </p>\r\n          <p>\r\n            Price:{\" \"}\r\n            {(\"$\" + this.props.location.state.finalRegistrationInfo.parkingData.price + \"/hr\")}\r\n          </p>\r\n          <p>\r\n            Reservation:{\" \"}\r\n            {(this.props.location.state.finalRegistrationInfo.parkingData.startReservation+ \" to \" + this.props.location.state.finalRegistrationInfo.parkingData.endReservation)}\r\n          </p>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n        <Button className=\"btn btn-primary\" name=\"confirm\" onClick={this.handleClick}>Back Home</Button>\r\n        </div>\r\n        \r\n      </div>\r\n       \r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Receipt;\r\n\r\n// this.props.location.state.property\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Confirmation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.location.state.parkingData)\r\n    this.state = {\r\n      user: this.props.location.state.user,\r\n      lname: this.props.location.state.lname,\r\n      email: this.props.location.state.email,\r\n      phonenumber: this.props.location.state.phonenumber,\r\n      license: this.props.location.state.license,\r\n      state: this.props.location.state.state,\r\n      parkingData: this.props.location.state.parkingData,\r\n      vehicleMake: this.props.location.state.vehicleMake,\r\n      vehicleModel: this.props.location.state.vehicleModel,\r\n      vehicleYear: this.props.location.state.vehicleYear,\r\n      vehicleColor: this.props.location.state.vehicleColor,\r\n      vehiclePlate: this.props.location.state.vehiclePlate,\r\n      vehiclePlate: this.props.location.state.plate, toTransactionHandle: false, toReservationDetails: false,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e){\r\n    var itemName = e.target.name;\r\n\r\n    if(itemName == \"fix\"){\r\n      this.setState({toReservationDetails: true})\r\n    }else{\r\n      this.setState({toTransactionHandle: true})\r\n    }\r\n  }\r\n  handleChange(e) {\r\n    //Collects the value for each item name\r\n\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var registrationInfo = {\r\n      user: this.props.location.state.user,\r\n      lname: this.props.location.state.lname,\r\n      email: this.props.location.state.email,\r\n      phonenumber: this.props.location.state.phonenumber,\r\n      license: this.props.location.state.license,\r\n      state: this.props.location.state.state,\r\n      parkingData: this.props.location.state.parkingData,\r\n      parkingData: this.props.location.state.parkingData,\r\n      vehicleMake: this.props.location.state.vehicleMake,\r\n      vehicleModel: this.props.location.state.vehicleModel,\r\n      vehicleYear: this.props.location.state.vehicleYear,\r\n      vehicleColor: this.props.location.state.vehicleColor,\r\n      vehiclePlate: this.props.location.state.vehiclePlate\r\n    };\r\n    this.setState({\r\n      toVehicleDetails: true,\r\n      finalRegistrationInfo: registrationInfo\r\n    });\r\n    console.log(\"finalRegistrationInfo: \", this.state.finalRegistrationInfo);\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toTransactionHandle === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/TransactionHandle\",\r\n            state: this.state\r\n          }}\r\n        />\r\n      );\r\n    }else if(this.state.toReservationDetails === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/reservationdetails\",\r\n            state: this.state\r\n          }}\r\n        />\r\n      );\r\n        }\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#1A2637\",\r\n          maxWidth: \"fit-content\",\r\n          margin: \"10px auto\",\r\n          padding: \"20px\",\r\n          borderRadius: \"10px\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontFamily: \"Roboto Slab\",\r\n            color: \"white\",\r\n            fontSize: \"1.2rem\",\r\n            margin: \"20px 0\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\r\n            Please Confirm Your Information\r\n          </h1>\r\n          <hr style={{backgroundColor: \"white\"}}/>\r\n          <div style={{paddingLeft: \"auto\", paddingLeft: \"10%\"}}>\r\n          <div style={{textAlign: \"left\", float: \"left\"}}>\r\n            <h3><u>About You</u></h3>\r\n          <p>\r\n            Name:{\" \"}\r\n            {(this.props.location.state.user).toUpperCase() +\r\n              \" \" +\r\n              (this.props.location.state.lname).toUpperCase()}\r\n          </p>\r\n          <p>\r\n            Email:{\" \"}\r\n            {(this.props.location.state.email)}\r\n          </p>\r\n          <p>\r\n            Phone Number:{\" \"}\r\n            {(this.props.location.state.phonenumber)}\r\n          </p>\r\n          <p>\r\n            License Number:{\" \"}\r\n            {(this.props.location.state.license)}\r\n          </p>\r\n          <p>\r\n            State:{\" \"}\r\n            {(this.props.location.state.state)}\r\n          </p>\r\n          </div>\r\n          <div style={{textAlign: \"left\", float: \"left\", marginLeft: \"20px\"}}>\r\n            <h3><u>Vehicle</u></h3>\r\n          <p>\r\n            Make:{\" \"}\r\n            {this.props.location.state.vehicleMake}\r\n          </p>\r\n          <p>\r\n            model:{\" \"}\r\n            {(this.props.location.state.VehicleModel)}\r\n          </p>\r\n          <p>\r\n            year:{\" \"}\r\n            {(this.props.location.state.vehicleYear)}\r\n          </p>\r\n          <p>\r\n            Color:{\" \"}\r\n            {(this.props.location.state.vehicleColor)}\r\n          </p>\r\n          <p>\r\n            License Plate:{\" \"}\r\n            {(this.props.location.state.vehiclePlate)}\r\n          </p>\r\n          </div>\r\n          <div style={{textAlign: \"left\", float: \"left\", marginLeft: \"40px\", marginRight: \"auto\", width: \"30%\"}}>\r\n            <h3><u>Reservation</u></h3>\r\n          <p>\r\n            Name:{\" \"}\r\n            {this.props.location.state.parkingData.lotName}\r\n          </p>\r\n          <p>\r\n            {console.log(this.props.location.state.parkingData.hours)}\r\n            Hours:{\" \"}\r\n            {(this.props.location.state.parkingData.hours.opening + \":00 to \" + this.props.location.state.parkingData.hours.closing + \":00\")}\r\n          </p>\r\n          <p>\r\n            Address:{\" \"}\r\n            {(this.props.location.state.parkingData.address)}\r\n          </p>\r\n          <p>\r\n            Price:{\" \"}\r\n            {(this.props.location.state.parkingData.price)}\r\n          </p>\r\n          <p>\r\n            Reservation:{\" \"}\r\n            {(this.props.location.state.parkingData.startReservation+ \" to \" + this.props.location.state.parkingData.endReservation)}\r\n          </p>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n        <Button className=\"btn btn-primary\" name=\"fix\" onClick={this.handleClick}>Need to Fix</Button>&nbsp;&nbsp;&nbsp;\r\n        <Button className=\"btn btn-primary\" name=\"confirm\" onClick={this.handleClick}>Confirm</Button>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Confirmation;\r\n\r\n// this.props.location.state.property\r\n","import { set } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport TimeRange from \"react-timeline-range-slider\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst now = new Date();\r\nconst getTodayAtSpecificHour = (hour = 9) =>\r\n  set(now, { hours: hour, minutes: 0 });\r\nconst timelineInterval = [\r\n  getTodayAtSpecificHour(0),\r\n  getTodayAtSpecificHour(24)\r\n];\r\n\r\nclass ReservationDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.location.state.parkingData);\r\n    this.state = {\r\n      error: false,\r\n      disabledIntervals: [\r\n        {\r\n          start: getTodayAtSpecificHour(0),\r\n          end: getTodayAtSpecificHour(\r\n            this.props.location.state.parkingData.hours.opening\r\n          )\r\n        },\r\n        {\r\n          start: getTodayAtSpecificHour(\r\n            this.props.location.state.parkingData.hours.opening\r\n          ),\r\n          end: getTodayAtSpecificHour(now.getHours())\r\n        },\r\n        {\r\n          start: getTodayAtSpecificHour(\r\n            this.props.location.state.parkingData.hours.closing\r\n          ),\r\n          end: getTodayAtSpecificHour(24)\r\n        }\r\n      ],\r\n      selectedInterval: [getTodayAtSpecificHour(), getTodayAtSpecificHour(15)],\r\n      toUserInfo: false,\r\n      finalRegistrationInfo: {\r\n        name: this.props.location.state.parkingData.name,\r\n        hours: this.props.location.state.parkingData.hours,\r\n        address: this.props.location.state.parkingData.address\r\n      }\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  errorHandler = ({ error }) => this.setState({ error });\r\n  onChangeCallback = selectedInterval =>\r\n    this.setState({ selectedInterval }, () => {});\r\n\r\n  handleClick(e) {\r\n    this.setState({\r\n      toUserInfo: true,\r\n      finalRegistrationInfo: {\r\n        parkingData:{\r\n          lotName: this.props.location.state.parkingData.name,\r\n        hours: this.props.location.state.parkingData.hours,\r\n        address: this.props.location.state.parkingData.address,\r\n        startReservation: format(\r\n          this.state.selectedInterval[0],\r\n          \" MMM dd, hh:mm a\"\r\n        ),\r\n        endReservation: format(\r\n          this.state.selectedInterval[1],\r\n          \" MMM dd, hh:mm a\"\r\n        ), price: this.props.location.state.parkingData.price\r\n        }\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toUserInfo === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/userinfo\",\r\n            state: this.state.finalRegistrationInfo\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          height: \"100%\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontFamily: \"Roboto Slab\",\r\n            color: \"#606367\",\r\n            fontSize: \"1.2rem\",\r\n            margin: \"20px 0\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\r\n            How long do you want to stay?{\" \"}\r\n          </h1>\r\n          <span style={{ textAlign: \"center\" }}>\r\n            {format(this.state.selectedInterval[0], \" MMM dd, hh:mm a\")} to\r\n            {format(this.state.selectedInterval[1], \" MMM dd, hh:mm a\")}\r\n          </span>\r\n        </div>\r\n\r\n        <TimeRange\r\n          error={this.state.error}\r\n          ticksNumber={24}\r\n          selectedInterval={this.state.selectedInterval}\r\n          timelineInterval={timelineInterval}\r\n          onUpdateCallback={this.errorHandler}\r\n          onChangeCallback={this.onChangeCallback}\r\n          disabledIntervals={this.state.disabledIntervals}\r\n        />\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{\r\n            backgroundColor: \"#1A2637\",\r\n            borderColor: \"white\",\r\n            fontFamily: \"Roboto Slab\",\r\n            marginTop: \"40px\",\r\n            width: \"300px\"\r\n          }}\r\n          onClick={this.handleClick}\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservationDetails;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n      license: \"\",\r\n      state: \"\",\r\n\r\n    };\r\n  }\r\n    componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({\r\n        user: user.displayName,\r\n        email: user.email,\r\n        phonenumber: user.DB_phonenumber\r\n        })\r\n        console.log(this.state.user)\r\n        console.log(this.state.email)\r\n\r\n      }\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <h3>My account</h3>\r\n          <div>\r\n            <p>\r\n            Username: {this.state.user}\r\n            </p>\r\n            <p>Email: {this.state.email}</p>\r\n            <p>Phone: {this.state.phonenumber}</p>\r\n\r\n          </div>\r\n          <div>\r\n            My reservations\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { navigate } from \"@reach/router\"; //move from different pages\r\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Navigation from \"./Navigation\";\r\nimport Login from \"./Login\";\r\nimport Mapbox from \"./Mapbox\";\r\nimport Register from \"./Register\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport VehicleDetails from \"./VehicleDetails\";\r\nimport TransactionHandle from \"./TransactionHandle.js\";\r\nimport Receipt from \"./Receipt.js\";\r\nimport Confirmation from \"./Confirmation.js\";\r\nimport ReservationDetails from \"./ReservationDetails.js\";\r\nimport Account from \"./Account\";\r\n\r\n/*  var database = firebase.database();\r\nvar ref = database.ref('users');\r\nvar data = {\r\n    DB_user: \"\",\r\n    DB_userID: \"\",\r\n    \r\n} */\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      displayName: null,\r\n      userID: null,\r\n      lname:'',\r\n      email: '',\r\n      phonenumber:'',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(FBUser => {\r\n      if (FBUser) {\r\n        this.setState({\r\n          //HERE IS WHERE THE FIREBASE USER SET \r\n          user: FBUser.displayName,\r\n          userID: FBUser.uid\r\n        });\r\n        \r\n        //Data insertion into DB\r\n        // data.DB_user = this.state.user;\r\n        //data.DB_userID = this.state.userID;\r\n        //ref.push(data)\r\n      }\r\n    });\r\n  }\r\n  registerUser = userName => {\r\n    firebase.auth().onAuthStateChanged(FBUser => {\r\n      FBUser.updateProfile({\r\n        displayName: userName\r\n      }).then(() => {\r\n        this.setState({\r\n          user: FBUser.displayName,\r\n          displayName: FBUser.displayName,\r\n          userID: FBUser.uid\r\n        });\r\n        navigate(\"/\");\r\n      });\r\n    });\r\n  };\r\n\r\n  logOutUser = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      displayName: null,\r\n      userID: null,\r\n      user: null\r\n    });\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        navigate(\"./\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Navigation user={this.state.user} logOutUser={this.logOutUser} />\r\n          </div>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/Park-Me\"\r\n              component={Mapbox}\r\n              render={props => <Mapbox {...props} />}\r\n            />\r\n            <Route path=\"/login\" component={Login} user={this.state.user} />\r\n            <Route\r\n              path=\"/register\"\r\n              component={Register}\r\n              registerUser={this.state.user}\r\n            />\r\n            <Route\r\n              path=\"/reservationdetails\"\r\n              render={props => <ReservationDetails {...props} />}\r\n            />\r\n            <Route path=\"/userinfo\" render={props => <UserInfo {...props} />} />\r\n            <Route\r\n              path=\"/vehicleDetails\"\r\n              render={props => <VehicleDetails {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/confirmation\"\r\n              render={props => <Confirmation {...props} />}\r\n            />\r\n            <Route\r\n              path=\"/transactionHandle\"\r\n              render={props => <TransactionHandle {...props} />}\r\n            />\r\n            <Route path=\"/receipt\" render={props => <Receipt {...props} />} />\r\n            <Route \r\n            path=\"/account\" \r\n            component={Account}\r\n            render= {props => <Account {...props} />}/>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n//render={(props) => <Reserve parkingLot={name: \"\", location: \"\",}/>} component={Reserve}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'; //library from node_modules folder\r\nimport ReactDOM from 'react-dom'; //library from node_modules folder\r\nimport './index.css';     \r\nimport App from './App'; //subcomponent\r\nimport * as serviceWorker from './serviceWorker'; //make application modern and compatible with mobile devices\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <App />\r\n   \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}