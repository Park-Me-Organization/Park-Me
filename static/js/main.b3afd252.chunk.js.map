{"version":3,"sources":["Firebase.js","Mapbox.js","Navigation.js","FormError.js","Login.js","UserInput.js","Register.js","UserInfo.js","VehicleDetails.js","TransactionHandle.js","Receipt.js","Confirmation.js","ReservationDetails.js","Account.js","App.js","serviceWorker.js","index.js","Assets/Parking-Logo.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","query","Navigation","string","this","props","user","logOutUser","className","to","src","Logo","width","height","alt","charAt","toUpperCase","slice","console","log","onClick","e","Component","FormError","theMessage","Login","state","email","password","errorMessage","handleChange","bind","handleSubmit","itemName","target","name","itemValue","value","setState","registrationInfo","toHomePage","preventDefault","signInWithEmailAndPassword","then","catch","error","message","pathname","style","marginTop","onSubmit","padding","marginLeft","marginRight","htmlFor","required","type","id","placeholder","onChange","UserInput","address","textAlign","display","justifyContent","$","require","Mapbox","lng","lat","zoom","toReservationDetails","handleClick","buttonRef","React","createRef","mapboxgl","accessToken","map","Map","container","mapContainer","center","limit","parkingdata","bbox","self","geocoder","MapboxGeocoder","marker","types","render","item","properties","maki","text","SearchBox","document","getElementById","appendChild","onAdd","geolocate","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","addControl","on","result","remove","coords","longitude","latitude","ajax","method","url","done","data","features","forEach","el","createElement","undefined","place_name","substring","indexOf","pData","hours","opening","Math","floor","random","closing","price","availablespots","popup","Popup","setLngLat","setHTML","current","addTo","getElementsByName","addEventListener","Marker","geometry","coordinates","setPopup","getElement","mainMarker","parkingData","ref","validation","inputString","regex","i","length","test","database","DB_user","DB_lname","DB_email","DB_phonenumber","DB_userID","Register","lname","phonenumber","passOne","passTwo","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","onAuthStateChanged","profile","userid","String","uid","push","country","inputStyle","isValid","UserInfo","license","finalRegistrationInfo","toVehicleDetails","handleSelect","location","Button","backgroundColor","borderColor","fontFamily","years","Array","from","val","index","toString","VehicleDetails","make","model","year","color","plate","toConfirmation","vehicleMake","vehicleModel","vehicleYear","vehicleColor","vehiclePlate","carMake","car","TransactionHandle","number","zipcode","sCode","toReceipt","Receipt","qrcode","toHome","characters","charactersLength","QRious","element","foreground","size","set","flexDirection","alignItems","maxWidth","margin","borderRadius","fontSize","paddingLeft","float","lotName","startReservation","endReservation","total","capitalize","Confirmation","toTransactionHandle","now","Date","getTodayAtSpecificHour","hour","minutes","timelineInterval","ReservationDetails","errorHandler","onChangeCallback","selectedInterval","disabledIntervals","start","end","getHours","toUserInfo","differenceInMinutes","format","ticksNumber","onUpdateCallback","Account","class","App","registerUser","userName","FBUser","userID","navigate","signOut","exact","path","component","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b3afd252.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBg4RHnJAGKRxZbuyAxjJEmZ6N8d2mvPY0\",\n    authDomain: \"park-me-web.firebaseapp.com\",\n    databaseURL: \"https://park-me-web.firebaseio.com\",\n    projectId: \"park-me-web\",\n    storageBucket: \"park-me-web.appspot.com\",\n    messagingSenderId: \"696794983879\",\n    appId: \"1:696794983879:web:da7fd98f906dfc77637de2\",\n    measurementId: \"G-FEXGBWQGEY\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export const provider = new firebase.auth.GoogleAuthProvider();\n  export const auth = firebase.auth();\n  export default firebase;","import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport \"./App.css\";\nimport UserInput from \"./UserInput\";\nimport { Redirect } from \"react-router-dom\";\nvar $ = require(\"jquery\");\n\nvar query;\n\nclass Mapbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -84.387,\n      lat: 33.749,\n      zoom: 13,\n      toReservationDetails: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.buttonRef = React.createRef();\n  }\n\n  handleClick() {\n    this.setState({ toReservationDetails: true });\n  }\n  componentDidMount(props) {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibmFkaW1rMSIsImEiOiJja2doaGh5dWowM292MnpudW03MHc2MzdwIn0.TU9JkM8-F3FZ5RKTTO3n9A\";\n\n    //Mapbox Map View\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/nadimk1/ckghhntfd19g51ao0zjbqcu65\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      limit: 10,\n      parkingdata: {},\n      bbox: [-84.401037, 33.745468, -84.370436, 33.768017] //min long, min lag, max long, max lat\n    });\n\n    // reference to \"this\" [used inside of geocoder.on(...) and geolocator.on(...) methods]\n    const self = this;\n\n    // Mapbox Geocoder\n    const geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken, // Set the access token\n      mapboxgl: mapboxgl, // Set the mapbox-gl instance\n      placeholder: \"Address, Place, City or Venue\",\n      marker: false, // Do not use the default marker style\n      limit: 10, //limits the search suggestion results\n      types: \"poi\",\n      //render geocoder for suggested list of items with logo,text and address\n      render: function(item) {\n        var maki = item.properties.maki || \"marker\";\n        {\n          return (\n            \"<div class='geocoder-dropdown-item'><img class='geocoder-dropdown-icon' src='https://unpkg.com/@mapbox/maki@6.1.0/icons/\" +\n            maki +\n            \"-15.svg'><span class='geocoder-dropdown-text'> \" +\n            item.text +\n            \"</span><span class='geocoder-dropdown-text'> <br>\" +\n            item.properties.address +\n            \"</span></div>\"\n          );\n        }\n      }\n    });\n\n    // Add the geocoder to the map\n    const SearchBox = document.getElementById(\"geocoder\");\n    if (SearchBox != null) {\n      SearchBox.appendChild(geocoder.onAdd(map));\n    }\n\n    // current location button\n    const geolocate = new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true,\n      showUserLocation: true,\n      showAccuracyCircle: true\n    });\n\n    map.addControl(geolocate);\n\n    // locate current user location and 10 nearest parking lots\n    geolocate.on(\"geolocate\", result => {\n      $(\".marker\").remove();\n      $(\".Main-Marker\").remove();\n      console.log(result);\n\n      query =\n        \"https://api.mapbox.com/geocoding/v5/mapbox.places/parking.json?limit=10&proximity=\" +\n        result.coords.longitude +\n        \",\" +\n        result.coords.latitude +\n        \"&types=poi&&access_token=pk.eyJ1IjoicmFmYWVsaGR6YSIsImEiOiJja2dzeHJjbnMwZzE3MnJtNWV6cHVsam9sIn0.7oigwdpk6AYK5VqUZq3phg\";\n\n      $.ajax({\n        method: \"GET\",\n        url: query\n      }).done(function(data) {\n        data.features.forEach(marker => {\n          var el = document.createElement(\"div\");\n          el.className = \"marker\";\n          var address =\n            marker.properties.address == undefined\n              ? marker.place_name.substring(marker.place_name.indexOf(\",\") + 1)\n              : marker.properties.address;\n\n          var pData = {\n            name: marker.text.toUpperCase(),\n            hours: {\n              opening: Math.floor(Math.random() * 3 + 7),\n              closing: Math.floor(Math.random() * 5 + 5)\n            },\n            price: Math.floor(Math.random() * 11 + 3),\n            address: address,\n            availablespots: Math.floor(Math.random() * 16) + 1\n          };\n\n          var popup = new mapboxgl.Popup()\n            .setLngLat([-96, 37.8])\n            .setHTML(\n              `<h1 id=\"popupTitle\"> ${marker.text.toUpperCase()} </h1><p id=\"popupDetails\" >${address}</p><p id=\"popupDetails\">Available Spots: ${\n                pData.availablespots\n              }</p>\n                <p id=\"popupDetails\">Price: $${pData.price}/hr </p>\n                <p id=\"popupDetails\">Hours: ${pData.hours.opening}AM-${\n                pData.hours.closing\n              }PM</p><div id=\"aContainer\">\n                <button style=\"background-color: #1A2637;font-family:\"Roboto Slab\";border-color: white;\" Name=\"btn\" class=\"btn btn-primary\" ref=${\n                  self.buttonRef.current\n                }>RESERVE</button></div>`\n            )\n            .addTo(map);\n          const btn = document.getElementsByName(\"btn\")[0];\n          btn.addEventListener(\"click\", self.handleClick);\n\n          // add marker to map\n          new mapboxgl.Marker(el)\n            .setLngLat(marker.geometry.coordinates)\n            .setPopup(popup)\n            .addTo(map)\n            .getElement()\n            .addEventListener(\"click\", () => {\n              self.setState({\n                pData: {\n                  name: pData.name,\n                  hours: {\n                    opening: pData.hours.opening,\n                    closing: pData.hours.closing + 12\n                  },\n                  price: pData.price,\n                  address: pData.address,\n                  availablespots: pData.availablespots\n                }\n              });\n            });\n        });\n      });\n    });\n\n    // After the map style has loaded on the page,\n    // add a source layer and default styling for a single point\n    map.on(\"load\", function() {\n      //take location input from geocoder and place markers at the 10 closest\n      // parking lots from entered location\n      geocoder.on(\"result\", function(result) {\n        //remove previous search and parking results markers\n        $(\".marker\").remove();\n        $(\".Main-Marker\").remove();\n\n        // create div for the searched location\n        var mainMarker = document.createElement(\"div\");\n        mainMarker.className = \"Main-Marker\";\n\n        // add marker to map\n        new mapboxgl.Marker(mainMarker)\n          .setLngLat(result.result.geometry.coordinates)\n          .addTo(map);\n\n        // create the query\n        query =\n          \"https://api.mapbox.com/geocoding/v5/mapbox.places/parking.json?limit=10&proximity=\" +\n          result.result.geometry.coordinates[0] +\n          \",\" +\n          result.result.geometry.coordinates[1] +\n          \"&types=poi&&access_token=pk.eyJ1IjoicmFmYWVsaGR6YSIsImEiOiJja2dzeHJjbnMwZzE3MnJtNWV6cHVsam9sIn0.7oigwdpk6AYK5VqUZq3phg\";\n\n        // send query to mapbox\n        $.ajax({\n          method: \"GET\",\n          url: query\n        }).done(function(data) {\n          data.features.forEach(function(marker, props) {\n            // create a DOM element for the parking lot marker\n            var el = document.createElement(\"div\");\n            el.className = \"marker\";\n\n            // address of parking lto\n            var address =\n              marker.properties.address == undefined\n                ? marker.place_name.substring(\n                    marker.place_name.indexOf(\",\") + 1\n                  )\n                : marker.properties.address;\n\n            // parking lot details\n            var pData = {\n              name: marker.text.toUpperCase(),\n              hours: {\n                opening: Math.floor(Math.random() * 3 + 7),\n                closing: Math.floor(Math.random() * 5 + 5)\n              },\n              price: Math.floor(Math.random() * 11 + 3),\n              address: address,\n              availablespots: Math.floor(Math.random() * 16)\n            };\n\n            // create a popup box in each parking lot location\n            var popup = new mapboxgl.Popup()\n              .setLngLat([-96, 37.8])\n              .setHTML(\n                `<h1 id=\"popupTitle\"> ${marker.text.toUpperCase()} </h1><p id=\"popupDetails\" >${address}</p><p id=\"popupDetails\">Available Spots: ${\n                  pData.availablespots\n                }</p>\n                <p id=\"popupDetails\">Price: $${pData.price}/hr </p>\n                <p id=\"popupDetails\">Hours: ${pData.hours.opening}AM-${\n                  pData.hours.closing\n                }PM</p><div id=\"aContainer\">\n                <button style=\"background-color: #1A2637;font-family:\"Roboto Slab\";border-color: white;\" Name=\"btn\" class=\"btn btn-primary\" ref=${\n                  self.buttonRef.current\n                }>RESERVE</button></div>`\n              )\n              .addTo(map);\n            const btn = document.getElementsByName(\"btn\")[0];\n            btn.addEventListener(\"click\", self.handleClick);\n\n            // add marker to map\n            new mapboxgl.Marker(el)\n              .setLngLat(marker.geometry.coordinates)\n              .setPopup(popup)\n              .addTo(map)\n              .getElement()\n              .addEventListener(\"click\", () => {\n                self.setState({\n                  pData: {\n                    name: pData.name,\n                    hours: {\n                      opening: pData.hours.opening,\n                      closing: pData.hours.closing + 12\n                    },\n                    price: pData.price,\n                    address: pData.address,\n                    availablespots: pData.availablespots\n                  }\n                });\n              });\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    // redirect page to reservationDetails.js once an appropriate parking location has been selected\n    if (this.state.toReservationDetails === true) {\n      return (\n        <div>\n          <Redirect\n            to={{\n              pathname: \"/reservationdetails\",\n              state: { parkingData: this.state.pData }\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\" id=\"input-side\">\n            <UserInput />\n          </div>\n          <div ref={el => (this.mapContainer = el)} className=\"col-lg-8\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mapbox;\n","import React, { Component } from \"react\";\n// import Logo from \"./Parking-Logo.svg\";\nimport Logo from \"./Assets/Parking-Logo.svg\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction capitalize(string){\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nclass Navigation extends Component {\n  render() {\n    const { user, logOutUser } = this.props;\n\n    return (\n      <div>\n        {\" \"}\n        <nav className=\"site-nav family-sans navbar navbar-expand navbar-dark higher\">\n          <style>\n            {\n              \"\\\n        .navbar{\\\n          background-color: Black;\\\n        }\\\n      \"\n            }\n          </style>\n\n          <div className=\"container-fluid\">\n            <NavLink className=\"navbar-brand\" to=\"/Park-Me\">\n              <img src={Logo} width=\"30\" height=\"30\" alt=\"Logo\" />\n            </NavLink>\n\n            <div className=\"navbar-nav ml-auto\">\n              <NavLink className=\"nav-item nav-link\" to=\"/account\">\n                {\" \"}\n                {this.props.user != null ? capitalize(this.props.user) : console.log(\"no user\")}\n              </NavLink>\n\n              {user == null && (\n                <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                  Log In\n                </NavLink>\n              )}\n\n              {user == null && (\n                <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                  Register\n                </NavLink>\n              )}\n              {user && (\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  to=\"/\"\n                  onClick={e => logOutUser(e)}\n                >\n                  Log Out\n                </NavLink>\n              )}\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\n\nclass FormError extends Component {\nrender(){\n    const {theMessage} = this.props;\n    \n    return(\n        <div className=\"col-12 alert alert-danger px-3\">\n            {theMessage}\n        </div>\n        )\n    }\n}\nexport default FormError;","import React, {Component} from 'react';\nimport firebase from './Firebase';\nimport FormError from './FormError';\nimport './App.css';\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: null\n            };\n            this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n            this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n    handleChange(e){        //Collects the value for each item name\n\n        const itemName = e.target.name;\n        const itemValue = e.target.value;\n\n        this.setState({[itemName]: itemValue});\n    }\n\n    handleSubmit(e){\n        var registrationInfo = {\n        email: this.state.email,\n        password : this.state.password\n        }\n        \n        this.setState({\n          toHomePage: true,\n//          user: registrationInfo.user,\n        });\n        \n        e.preventDefault();\n        //push an authentication event into the fireabse database\n\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.password\n        )\n        .then(()=>{\n        })\n        .catch(error =>{\n            if (error.message !== null){\n                this.setState({errorMessage: error.message});\n                \n            } else{\n                this.setState({errorMessage: null});\n            }\n        })\n    }\n\n    render(){\n      if (this.state.toHomePage === true) {\n        return (\n          <Redirect\n            to={{\n              pathname: \"/Park-Me\",\n              state: this.state.user,\n            }}\n          />\n        );\n      }       \n        return(\n          <form className=\"main-form\" style={{marginTop: \"2%\"}} onSubmit={this.handleSubmit}>\n            <div className=\"container\" style={{padding: \"0px\"}} >\n              <div className=\"row\" >\n                  <div className=\"card bg-light\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"500px\"}}>\n                    <div className=\"card-body\">\n                      <h3 className=\"font-weight-light mb-3\">Log in</h3>\n                      <section className=\"form-group\">\n                      {this.state.errorMessage !== null ? (\n                                                      <FormError theMessage = {this.state.errorMessage}\n                                                      />\n                                                      ): null}\n                        <label\n                          className=\"form-control-label sr-only\"\n                          htmlFor=\"Email\">\n                          Email\n                        </label>\n                        <input\n                          required\n                          className=\"form-control\"\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"email\"\n                          placeholder=\"Email\"\n                          value={this.state.email}\n                          onChange={this.handleChange}\n                        />\n                      </section>\n                      <section className=\"form-group\">\n                        <input\n                          required\n                          className=\"form-control\"\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                          value={this.state.password}\n                          onChange={this.handleChange}\n\n                        />\n                      </section>\n                      <div className=\"form-group text-right mb-0\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                          Log in\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </form>\n        )\n    }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\n\nclass UserInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"Title\">Where Do You Want To Go?</h1>\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            width: \"55%\",\n            textAlign: \"center\"\n          }}\n        >\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div id=\"geocoder\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserInput;\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport firebase from \"./Firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nvar validation = function(inputString, regex) {\n  var alpha = true;\n\n  for (var i = 0; i < inputString.length; i++) {\n    if (!regex.test(inputString.charAt(i))) {\n      return false;\n    } else {\n      continue;\n    }\n  }\n  return alpha;\n};\nvar database = firebase.database();\nvar ref = database.ref(\"users\");\nvar data = {\n  DB_user: \"\",\n  DB_lname: \"\",\n  DB_email: \"\",\n  DB_phonenumber: \"\",\n  DB_userID: \"\"\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      passOne: \"\",\n      passTwo: \"\",\n      errorMessage: null\n    };\n\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue }, () => {\n      if (this.state.passOne !== this.state.passTwo) {\n        this.setState({ errorMessage: \"Passwords do not match\" });\n      }\n      if (\n        validation(itemValue, /^[a-zA-Z -]*$/i) == false &&\n        itemName == \"user\"\n      ) {\n        this.setState({\n          errorMessage:\n            'Incorrect format for First Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n        });\n      } else if (\n        validation(itemValue, /^[a-zA-Z -]*$/i) == false &&\n        itemName == \"lname\"\n      ) {\n        this.setState({\n          errorMessage:\n            'Incorrect format for Last Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n        });\n      } else {\n        this.setState({ errorMessage: null });\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      passOne: this.state.passOne\n    };\n\n    data.DB_user = this.state.user;\n    data.DB_lname = this.state.lname;\n    data.DB_email = this.state.email;\n    data.DB_phonenumber = this.state.phonenumber;\n\n    console.log(\"registrationInfo: \", registrationInfo);\n\n    this.setState({\n      toHomePage: true,\n      user: registrationInfo.user\n    });\n    e.preventDefault();\n\n    //push an authentication event into the fireabse database\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.passOne\n      )\n      .then(function() {\n        if (firebase.auth().currentUser != null) {\n          firebase\n            .auth()\n            .currentUser.updateProfile({\n              displayName: registrationInfo.user\n            })\n            .then(\n              function() {\n                firebase.auth().onAuthStateChanged(profile => {\n                  var userid = String(profile.uid);\n                  console.log(\"  Provider-specific UID: \" + userid);\n                  data.DB_userID = userid;\n                  ref.push(data);\n                });\n              },\n              function(error) {\n                console.log(\"Error happened\" + error);\n              }\n            );\n        }\n      });\n  }\n\n  render() {\n    if (this.state.toHomePage === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/Park-Me\",\n            state: this.state.user\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\"\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">Register</h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"user\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"user\"\n                      placeholder=\"First Name\"\n                      name=\"user\"\n                      required\n                      value={this.state.user}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"lname\"\n                    >\n                      Last Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"lname\"\n                      placeholder=\"Last Name\"\n                      name=\"lname\"\n                      required\n                      value={this.state.lname}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <section className=\"form-group\">\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\n                    Email\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email Address\"\n                    required\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <section className=\"form-group\">\n                  <PhoneInput\n                    country={\"us\"}\n                    placeholder=\"phone number\"\n                    inputStyle={{ width: \"100%\" }}\n                    value={this.state.phonenumber}\n                    onChange={phonenumber => this.setState({ phonenumber })}\n                  />\n                </section>\n                <div className=\"form-row\">\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"passOne\"\n                      placeholder=\"Password\"\n                      value={this.state.passOne}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"password\"\n                      required\n                      name=\"passTwo\"\n                      placeholder=\"Retype Password\"\n                      value={this.state.passTwo}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <div className=\"form-group text-right mb-0\">\n                  <button className=\"btn btn-primary\" type=\"submit\">\n                    Register\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { isValid } from \"driver-license-validator\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\n\nvar validation = function(inputString, regex) {\n  var alpha = true;\n  if (regex === \"license\") {\n    return isValid(inputString);\n  }\n  for (var i = 0; i < inputString.length; i++) {\n    if (!regex.test(inputString.charAt(i))) {\n      return false;\n    } else {\n      continue;\n    }\n  }\n  return alpha;\n};\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      license: \"\",\n      state: \"\",\n      finalRegistrationInfo: {},\n      toVehicleDetails: false,\n      errorMessage: null\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSelect(e) {\n    this.setState({\n      state: e.target.value\n    });\n  }\n  handleChange(e) {\n    // item being modified in input\n    const itemName = e.target.name;\n    // input\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n    if (\n      validation(itemValue, /^[a-zA-Z -]*$/i) == false &&\n      itemName == \"user\"\n    ) {\n      this.setState({\n        errorMessage:\n          'Incorrect format for First Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n      });\n    } else if (\n      validation(itemValue, /^[a-zA-Z -]*$/i) == false &&\n      itemName == \"lname\"\n    ) {\n      this.setState({\n        errorMessage:\n          'Incorrect format for Last Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n      });\n    } else if (\n      validation(itemValue, \"license\") == false &&\n      itemName == \"license\"\n    ) {\n      this.setState({\n        errorMessage: \"Incorrect format for License number. Please try again.\"\n      });\n    } else {\n      this.setState({\n        errorMessage: null\n      });\n    }\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      license: this.state.license,\n      state: this.state.state,\n      parkingData: this.props.location.state.finalRegistrationInfo\n    };\n    this.setState({\n      toVehicleDetails: true,\n      finalRegistrationInfo: registrationInfo\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toVehicleDetails === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/vehicleDetails\",\n            state: { finalRegistrationInfo: this.state.finalRegistrationInfo }\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\"\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">\n                  Let's get some details\n                </h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"user\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"user\"\n                      placeholder=\"First Name\"\n                      name=\"user\"\n                      required\n                      value={this.state.user}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"lname\"\n                    >\n                      Last Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"lname\"\n                      placeholder=\"Last Name\"\n                      name=\"lname\"\n                      required\n                      value={this.state.lname}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <section className=\"form-group\">\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\n                    Email\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email Address\"\n                    required\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <section className=\"form-group\">\n                  <PhoneInput\n                    country={\"us\"}\n                    placeholder=\"phone number\"\n                    inputStyle={{ width: \"100%\" }}\n                    value={this.state.phonenumber}\n                    onChange={phonenumber => this.setState({ phonenumber })}\n                  />\n                </section>\n\n                <div className=\"form-row\">\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"license\"\n                      placeholder=\"License Number\"\n                      value={this.state.license}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"state\"\n                      className=\"custom-select mr-sm-2\"\n                      value={this.state.state}\n                      onChange={this.handleSelect}\n                    >\n                      <option value=\"AL\">Alabama</option>\n                      <option value=\"AK\">Alaska</option>\n                      <option value=\"AZ\">Arizona</option>\n                      <option value=\"AR\">Arkansas</option>\n                      <option value=\"CA\">California</option>\n                      <option value=\"CO\">Colorado</option>\n                      <option value=\"CT\">Connecticut</option>\n                      <option value=\"DE\">Delaware</option>\n                      <option value=\"DC\">District of Columbia</option>\n                      <option value=\"FL\">Florida</option>\n                      <option value=\"GA\">Georgia</option>\n                      <option value=\"HI\">Hawaii</option>\n                      <option value=\"ID\">Idaho</option>\n                      <option value=\"IL\">Illinois</option>\n                      <option value=\"IN\">Indiana</option>\n                      <option value=\"IA\">Iowa</option>\n                      <option value=\"KS\">Kansas</option>\n                      <option value=\"KY\">Kentucky</option>\n                      <option value=\"LA\">Louisiana</option>\n                      <option value=\"ME\">Maine</option>\n                      <option value=\"MD\">Maryland</option>\n                      <option value=\"MA\">Massachusetts</option>\n                      <option value=\"MI\">Michigan</option>\n                      <option value=\"MN\">Minnesota</option>\n                      <option value=\"MS\">Mississippi</option>\n                      <option value=\"MO\">Missouri</option>\n                      <option value=\"MT\">Montana</option>\n                      <option value=\"NE\">Nebraska</option>\n                      <option value=\"NV\">Nevada</option>\n                      <option value=\"NH\">New Hampshire</option>\n                      <option value=\"NJ\">New Jersey</option>\n                      <option value=\"NM\">New Mexico</option>\n                      <option value=\"NY\">New York</option>\n                      <option value=\"NC\">North Carolina</option>\n                      <option value=\"ND\">North Dakota</option>\n                      <option value=\"OH\">Ohio</option>\n                      <option value=\"OK\">Oklahoma</option>\n                      <option value=\"OR\">Oregon</option>\n                      <option value=\"PA\">Pennsylvania</option>\n                      <option value=\"RI\">Rhode Island</option>\n                      <option value=\"SC\">South Carolina</option>\n                      <option value=\"SD\">South Dakota</option>\n                      <option value=\"TN\">Tennessee</option>\n                      <option value=\"TX\">Texas</option>\n                      <option value=\"UT\">Utah</option>\n                      <option value=\"VT\">Vermont</option>\n                      <option value=\"VA\">Virginia</option>\n                      <option value=\"WA\">Washington</option>\n                      <option value=\"WV\">West Virginia</option>\n                      <option value=\"WI\">Wisconsin</option>\n                      <option value=\"WY\">Wyoming</option>\n                    </select>\n                  </section>\n                </div>\n                <div className=\"form-group text-right mb-0\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#1A2637\",\n                      borderColor: \"white\",\n                      fontFamily: \"Roboto Slab\"\n                    }}\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default UserInfo;\n\n//first&last name: /^[a-zA-Z -]*$/i\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport carMake from \"./Data/CarMake.json\";\n\nvar regex = \"\";\nvar validation = function(inputString, regex) {\n  var alpha = true;\n  for (var i = 0; i < inputString.length; i++) {\n    if (!regex.test(inputString.charAt(i))) {\n      return false;\n    } else {\n      continue;\n    }\n  }\n  return alpha;\n};\n\nconst years = Array.from(new Array(80), (val, index) =>\n  (2020 - index).toString()\n);\n\nclass VehicleDetails extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location.state.finalRegistrationInfo);\n    this.state = {\n      make: \"\",\n      model: \"\",\n      year: \"\",\n      color: \"\",\n      plate: \"\",\n      finalRegistrationInfo: this.props.location.state.finalRegistrationInfo,\n      toConfirmation: false,\n      errorMessage: null\n    };\n\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSelect(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.props.location.state.finalRegistrationInfo.user,\n      lname: this.props.location.state.finalRegistrationInfo.lname,\n      email: this.props.location.state.finalRegistrationInfo.email,\n      phonenumber: this.props.location.state.finalRegistrationInfo.phonenumber,\n      license: this.props.location.state.finalRegistrationInfo.license,\n      state: this.props.location.state.finalRegistrationInfo.state,\n      parkingData: this.props.location.state.finalRegistrationInfo.parkingData,\n      vehicleMake: this.state.make,\n      vehicleModel: this.state.model,\n      vehicleYear: this.state.year,\n      vehicleColor: this.state.color,\n      vehiclePlate: this.state.plate\n    };\n    this.setState({\n      toConfirmation: true,\n      finalRegistrationInfo: registrationInfo\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toConfirmation === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/confirmation\",\n            state: { finalRegistrationInfo: this.state.finalRegistrationInfo }\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\"\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">\n                  Tell us about that ride\n                </h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"make\"\n                      className=\"custom-select my-1 mr-sm-2\"\n                      value={this.state.make}\n                      onChange={this.handleSelect}\n                    >\n                      <option value=\"Make\">Make</option>\n                      {carMake.map(car => (\n                        <option value={car}>{car}</option>\n                      ))}\n                    </select>\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"year\"\n                      className=\"custom-select my-1 mr-sm-2\"\n                      value={this.state.year}\n                      onChange={this.handleSelect}\n                    >\n                      <option value=\"Year\">Year</option>\n                      {years.map(year => (\n                        <option value={year}>{year}</option>\n                      ))}\n                    </select>\n                  </section>\n                </div>\n\n                <div className=\"form-row\">\n                  {/* <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"model\"\n                      className=\"custom-select mr-sm-2\"\n                      value={this.state.model}\n                      onChange={this.handleSelect}\n                    >\n                      {console.log(\"make: \", carModels)}\n                      {this.state.make != null\n                        ? carModels.forEach(make => {\n                            if (this.state.make === make[\"brand\"]) {\n                              make[\"models\"].map(model => (\n                                <div>\n                                  {console.log(\"inside\")}\n                                <option id=\"makeID\" value={model}>{model}</option>\n                                </div>\n                              ));\n                            }\n                          })\n                        : this.setState({\n                            error: \"please select a make first\"\n                          })}\n                          \n                    </select>\n                  </section> */}\n\n                  <section className=\"form-group col-sm-6\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"phonenumber\"\n                    >\n                      color\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"model\"\n                      placeholder=\"Model\"\n                      required\n                      name=\"model\"\n                      value={this.state.model}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n\n                  <section className=\"form-group col-sm-6\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"phonenumber\"\n                    >\n                      color\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"phonenumber\"\n                      placeholder=\"Color\"\n                      required\n                      name=\"color\"\n                      value={this.state.color}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n\n                <section className=\"form-group\">\n                  <label\n                    className=\"form-control-label sr-only\"\n                    htmlFor=\"phonenumber\"\n                  >\n                    LicensePlateNumber\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    id=\"LicensePlateNumber\"\n                    placeholder=\"License Plate Number\"\n                    required\n                    name=\"plate\"\n                    value={this.state.plate}\n                    onChange={this.handleChange}\n                  />\n                </section>\n\n                <div className=\"form-group text-right mb-0\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#1A2637\",\n                      borderColor: \"white\",\n                      fontFamily: \"Roboto Slab\"\n                    }}\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default VehicleDetails;\n\n// this.props.location.state.property\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass TransactionHandle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      number: \"\",\n      zipcode: \"\",\n      sCode: \"\",\n      finalRegistrationInfo: this.props.location.state.finalRegistrationInfo,\n      toReceipt: false,\n      errorMessage: null\n    };\n\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // handle value changes for the input\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      toReceipt: true\n    });\n\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toReceipt === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/receipt\",\n            state: { finalRegistrationInfo: this.state.finalRegistrationInfo }\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\"\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">Payment Details</h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"user\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"user\"\n                      placeholder=\"First Name\"\n                      name=\"user\"\n                      required\n                      value={this.state.user}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"lname\"\n                    >\n                      Last Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"lname\"\n                      placeholder=\"Last Name\"\n                      name=\"lname\"\n                      required\n                      value={this.state.lname}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <section className=\"form-group\">\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\n                    Email\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    id=\"email\"\n                    placeholder=\"Credit Card Number\"\n                    required\n                    name=\"number\"\n                    value={this.state.number}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <div className=\"form-row\">\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"sCode\"\n                      placeholder=\"Security Code\"\n                      value={this.state.sCode}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      required\n                      name=\"zipcode\"\n                      placeholder=\"Zipcode\"\n                      value={this.state.zipcode}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <div className=\"form-group text-right mb-0\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#1A2637\",\n                      borderColor: \"white\",\n                      fontFamily: \"Roboto Slab\"\n                    }}\n                    type=\"submit\"\n                  >\n                    Confirm\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default TransactionHandle;\n\n// this.props.location.state.property\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport QRious from \"qrious\";\n\nvar qrcode;\nclass Receipt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qrcode: \"\",\n      toHome: false,\n      errorMessage: null\n    };\n    console.log(this.props.location.state.finalRegistrationInfo);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    var result = \"\";\n    var length = 5;\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    this.setState({ qrcode: result });\n\n    console.log(\"qrcode in function:\", this.state.qrcode);\n    var qr = new QRious({\n      element: document.getElementById(\"qr-code\"),\n      foreground: \"black\",\n      size: 200\n    });\n\n    qr.set({\n      foreground: \"black\",\n      size: 200,\n      value: qrcode\n    });\n\n    console.log(\"qrcode state:\", qrcode);\n  }\n\n  handleClick(e) {\n    this.setState({ toHome: true });\n  }\n\n  render() {\n    if (this.state.toHome === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/Park-Me\"\n          }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#1A2637\",\n            maxWidth: \"fit-content\",\n            margin: \"10px auto\",\n            padding: \"20px\",\n            borderRadius: \"10px\"\n          }}\n        >\n          <div\n            style={{\n              fontFamily: \"Roboto Slab\",\n              color: \"white\",\n              fontSize: \"1.2rem\",\n              margin: \"20px 0\",\n              textAlign: \"center\"\n            }}\n          >\n            <h1 style={{ fontFamily: \"Roboto Slab\" }}>\n              Thank You for Your Reservation!\n            </h1>\n            <p>\n              Your confirmation number is:{\" \"}\n              <b id=\"confirmation\"> {this.state.qrcode} </b>\n            </p>\n            <canvas id=\"qr-code\"></canvas>\n\n            <hr style={{ backgroundColor: \"white\" }} />\n            <div style={{ paddingLeft: \"auto\", paddingLeft: \"10%\" }}>\n              <div style={{ textAlign: \"left\", float: \"left\" }}>\n                <h3>\n                  <u>About You</u>\n                </h3>\n                <p>\n                  Name:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.user.toUpperCase() +\n                    \" \" +\n                    this.props.location.state.finalRegistrationInfo.lname.toUpperCase()}\n                </p>\n                <p>\n                  Email: {this.props.location.state.finalRegistrationInfo.email}\n                </p>\n                <p>\n                  Phone Number:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.phonenumber}\n                </p>\n                <p>\n                  License Number:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.license}\n                </p>\n                <p>\n                  State: {this.props.location.state.finalRegistrationInfo.state}\n                </p>\n              </div>\n              <div\n                style={{ textAlign: \"left\", float: \"left\", marginLeft: \"20px\" }}\n              >\n                <h3>\n                  <u>Vehicle</u>\n                </h3>\n                <p>\n                  Make:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.vehicleMake}\n                </p>\n                <p>\n                  model:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.vehicleModel}\n                </p>\n                <p>\n                  year:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.vehicleYear}\n                </p>\n                <p>\n                  Color:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.vehicleColor}\n                </p>\n                <p>\n                  License Plate:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.vehiclePlate}\n                </p>\n              </div>\n              <div\n                style={{\n                  textAlign: \"left\",\n                  float: \"left\",\n                  marginLeft: \"40px\",\n                  marginRight: \"auto\",\n                  width: \"30%\"\n                }}\n              >\n                <h3>\n                  <u>Reservation</u>\n                </h3>\n                <p>\n                  Name:{\" \"}\n                  {\n                    this.props.location.state.finalRegistrationInfo.parkingData\n                      .parkingData.lotName\n                  }\n                </p>\n                <p>\n                  Hours:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.hours.opening +\n                    \":00 am to \" +\n                    (this.props.location.state.finalRegistrationInfo.parkingData\n                      .parkingData.hours.closing -\n                      12) +\n                    \":00 pm\"}\n                </p>\n                <p>\n                  Address:{\" \"}\n                  {\n                    this.props.location.state.finalRegistrationInfo.parkingData\n                      .parkingData.address\n                  }\n                </p>\n                <p>\n                  Reservation:{\" \"}\n                  {this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.startReservation +\n                    \" to \" +\n                    this.props.location.state.finalRegistrationInfo.parkingData\n                      .parkingData.endReservation}\n                </p>\n                <p>\n                  Price:{\" \"}\n                  {\"$\" +\n                    this.props.location.state.finalRegistrationInfo.parkingData\n                      .parkingData.price +\n                    \"/hr\"}\n                </p>\n                <p>\n                  Total:{\" \"}\n                  {\"$\" +\n                    this.props.location.state.finalRegistrationInfo.parkingData\n                      .parkingData.total}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n            <Button\n              className=\"btn btn-primary\"\n              name=\"confirm\"\n              onClick={this.handleClick}\n            >\n              Back Home\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Receipt;\n\n// this.props.location.state.property\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass Confirmation extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location.state.finalRegistrationInfo);\n    this.state = {\n      toTransactionHandle: false,\n      toReservationDetails: false,\n      finalRegistrationInfo: this.props.location.state.finalRegistrationInfo\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    var itemName = e.target.name;\n\n    if (itemName == \"fix\") {\n      this.setState({ toReservationDetails: true });\n    } else {\n      this.setState({ toTransactionHandle: true });\n    }\n  }\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  render() {\n    if (this.state.toTransactionHandle === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/TransactionHandle\",\n            state: { finalRegistrationInfo: this.state.finalRegistrationInfo }\n          }}\n        />\n      );\n    } else if (this.state.toReservationDetails === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/reservationdetails\"\n          }}\n        />\n      );\n    }\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#1A2637\",\n          maxWidth: \"fit-content\",\n          margin: \"10px auto\",\n          padding: \"20px\",\n          borderRadius: \"10px\"\n        }}\n      >\n        <div\n          style={{\n            fontFamily: \"Roboto Slab\",\n            color: \"white\",\n            fontSize: \"1.2rem\",\n            margin: \"20px 0\",\n            textAlign: \"center\"\n          }}\n        >\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\n            Please Confirm Your Information\n          </h1>\n          <hr style={{ backgroundColor: \"white\" }} />\n          <div style={{ paddingLeft: \"auto\", paddingLeft: \"10%\" }}>\n            <div style={{ textAlign: \"left\", float: \"left\" }}>\n              <h3>\n                <u>About You</u>\n              </h3>\n              <p>\n                Name:{\" \"}\n                {capitalize(\n                  this.props.location.state.finalRegistrationInfo.user\n                ) +\n                  \" \" +\n                  capitalize(\n                    this.props.location.state.finalRegistrationInfo.lname\n                  )}\n              </p>\n              <p>Email: {this.state.finalRegistrationInfo.email}</p>\n              <p>\n                Phone Number:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.phonenumber}\n              </p>\n              <p>\n                License Number:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.license}\n              </p>\n              <p>\n                State: {this.props.location.state.finalRegistrationInfo.state}\n              </p>\n            </div>\n            <div\n              style={{ textAlign: \"left\", float: \"left\", marginLeft: \"20px\" }}\n            >\n              <h3>\n                <u>Vehicle</u>\n              </h3>\n              <p>\n                Make:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.vehicleMake}\n              </p>\n              <p>\n                model:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.vehicleModel}\n              </p>\n              <p>\n                year:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.vehicleYear}\n              </p>\n              <p>\n                Color:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.vehicleColor}\n              </p>\n              <p>\n                License Plate:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.vehiclePlate}\n              </p>\n            </div>\n            <div\n              style={{\n                textAlign: \"left\",\n                float: \"left\",\n                marginLeft: \"40px\",\n                marginRight: \"auto\",\n                width: \"30%\"\n              }}\n            >\n              <h3>\n                <u>Reservation</u>\n              </h3>\n              <p>\n                Name:{\" \"}\n                {\n                  this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.lotName\n                }\n              </p>\n              <p>\n                {console.log(\n                  this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.hours\n                )}\n                Hours:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.parkingData\n                  .parkingData.hours.opening +\n                  \":00 am to \" +\n                  (this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.hours.closing -\n                    12) +\n                  \":00 pm\"}\n              </p>\n              <p>\n                Address:{\" \"}\n                {\n                  this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.address\n                }\n              </p>\n              <p>\n                Reservation:{\" \"}\n                {this.props.location.state.finalRegistrationInfo.parkingData\n                  .parkingData.startReservation +\n                  \" to \" +\n                  this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.endReservation}\n              </p>\n              <p>\n                Price:{\" \"}\n                {\"$\" +\n                  this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.price +\n                  \"/hr\"}\n              </p>\n              <p>\n                Total:{\" \"}\n                {\"$\" +\n                  this.props.location.state.finalRegistrationInfo.parkingData\n                    .parkingData.total +\n                  \"/hr\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n          <Button\n            className=\"btn btn-primary\"\n            name=\"fix\"\n            onClick={this.handleClick}\n          >\n            Need to Fix\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button\n            className=\"btn btn-primary\"\n            name=\"confirm\"\n            onClick={this.handleClick}\n          >\n            Confirm\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Confirmation;\n","import { set, differenceInMinutes } from \"date-fns\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport TimeRange from \"react-timeline-range-slider\";\nimport { Redirect } from \"react-router-dom\";\n\nconst now = new Date();\nconst getTodayAtSpecificHour = (hour = 9) =>\n  set(now, { hours: hour, minutes: 0 });\nconst timelineInterval = [\n  getTodayAtSpecificHour(0),\n  getTodayAtSpecificHour(24)\n];\n\nclass ReservationDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location.state.parkingData);\n    this.state = {\n      error: false,\n      disabledIntervals: [\n        {\n          start: getTodayAtSpecificHour(0),\n          end: getTodayAtSpecificHour(\n            this.props.location.state.parkingData.hours.opening\n          )\n        },\n        {\n          start: getTodayAtSpecificHour(\n            this.props.location.state.parkingData.hours.opening\n          ),\n          end: getTodayAtSpecificHour(now.getHours())\n        },\n        {\n          start: getTodayAtSpecificHour(\n            this.props.location.state.parkingData.hours.closing\n          ),\n          end: getTodayAtSpecificHour(24)\n        }\n      ],\n      selectedInterval: [getTodayAtSpecificHour(), getTodayAtSpecificHour(15)],\n      toUserInfo: false,\n      finalRegistrationInfo: {\n        name: this.props.location.state.parkingData.name,\n        hours: this.props.location.state.parkingData.hours,\n        address: this.props.location.state.parkingData.address\n      }\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  errorHandler = ({ error }) => this.setState({ error });\n  onChangeCallback = selectedInterval =>\n    this.setState({ selectedInterval }, () => {});\n\n  handleClick(e) {\n    console.log(\n      differenceInMinutes(\n        this.state.selectedInterval[0],\n        this.state.selectedInterval[1]\n      ) / 60.0\n    );\n    this.setState({\n      toUserInfo: true,\n      finalRegistrationInfo: {\n        parkingData: {\n          lotName: this.props.location.state.parkingData.name,\n          hours: this.props.location.state.parkingData.hours,\n          address: this.props.location.state.parkingData.address,\n          startReservation: format(\n            this.state.selectedInterval[0],\n            \" MMM dd, hh:mm a\"\n          ),\n          endReservation: format(\n            this.state.selectedInterval[1],\n            \" MMM dd, hh:mm a\"\n          ),\n          price: this.props.location.state.parkingData.price,\n          total:\n            this.props.location.state.parkingData.price *\n            (differenceInMinutes(\n              this.state.selectedInterval[0],\n              this.state.selectedInterval[1]\n            ) /\n              60.0) *\n            -1\n        }\n      }\n    });\n  }\n\n  render() {\n    // redirect to userinfo.js and pass the parking lot information and reservation hours information\n    if (this.state.toUserInfo === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/userinfo\",\n            state: { finalRegistrationInfo: this.state.finalRegistrationInfo }\n          }}\n        />\n      );\n    }\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\"\n        }}\n      >\n        <div\n          style={{\n            fontFamily: \"Roboto Slab\",\n            color: \"#606367\",\n            fontSize: \"1.2rem\",\n            margin: \"20px 0\",\n            textAlign: \"center\"\n          }}\n        >\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\n            How long do you want to stay?{\" \"}\n          </h1>\n          <span style={{ textAlign: \"center\" }}>\n            {format(this.state.selectedInterval[0], \" MMM dd, hh:mm a\")} to\n            {format(this.state.selectedInterval[1], \" MMM dd, hh:mm a\")}\n          </span>\n        </div>\n\n        <TimeRange\n          error={this.state.error}\n          ticksNumber={24}\n          selectedInterval={this.state.selectedInterval}\n          timelineInterval={timelineInterval}\n          onUpdateCallback={this.errorHandler}\n          onChangeCallback={this.onChangeCallback}\n          disabledIntervals={this.state.disabledIntervals}\n        />\n        <button\n          className=\"btn btn-primary\"\n          style={{\n            backgroundColor: \"#1A2637\",\n            borderColor: \"white\",\n            fontFamily: \"Roboto Slab\",\n            marginTop: \"40px\",\n            width: \"300px\"\n          }}\n          onClick={this.handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ReservationDetails;\n","import React, { Component } from \"react\";\nimport firebase from \"./Firebase\";\nimport \"./App.css\";\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      license: \"\",\n      state: \"\"\n    };\n  }\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user: user.displayName,\n          email: user.email,\n          phonenumber: user.DB_phonenumber\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"center\">\n        <h3>My account</h3>\n        <div>\n          <p>\n            <strong>Username: </strong>\n            {this.state.user}\n          </p>\n          <p>\n            <strong>Email: </strong> {this.state.email}\n          </p>\n        </div>\n        <div>\n          <h3>My reservations</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n","import React, { Component } from \"react\";\nimport firebase from \"./Firebase\";\nimport { navigate } from \"@reach/router\"; //move from different pages\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./Navigation\";\nimport Login from \"./Login\";\nimport Mapbox from \"./Mapbox\";\nimport Register from \"./Register\";\nimport UserInfo from \"./UserInfo\";\nimport VehicleDetails from \"./VehicleDetails\";\nimport TransactionHandle from \"./TransactionHandle.js\";\nimport Receipt from \"./Receipt.js\";\nimport Confirmation from \"./Confirmation.js\";\nimport ReservationDetails from \"./ReservationDetails.js\";\nimport Account from \"./Account\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      displayName: null,\n      userID: null,\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\"\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      if (FBUser) {\n        this.setState({\n          user: FBUser.displayName,\n          userID: FBUser.uid\n        });\n      }\n    });\n  }\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName: userName\n      }).then(() => {\n        this.setState({\n          user: FBUser.displayName,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid\n        });\n        navigate(\"/\");\n      });\n    });\n  };\n\n  logOutUser = e => {\n    e.preventDefault();\n    this.setState({\n      displayName: null,\n      userID: null,\n      user: null\n    });\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate(\"./\");\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <Navigation user={this.state.user} logOutUser={this.logOutUser} />\n          </div>\n          <Switch>\n            <Route\n              exact\n              path=\"/Park-Me\"\n              component={Mapbox}\n              render={props => <Mapbox {...props} />}\n            />\n            <Route path=\"/login\" component={Login} user={this.state.user} />\n            <Route\n              path=\"/register\"\n              component={Register}\n              registerUser={this.state.user}\n            />\n            <Route\n              path=\"/reservationdetails\"\n              render={props => <ReservationDetails {...props} />}\n            />\n            <Route path=\"/userinfo\" render={props => <UserInfo {...props} />} />\n            <Route\n              path=\"/vehicleDetails\"\n              render={props => <VehicleDetails {...props} />}\n            />\n            <Route\n              path=\"/confirmation\"\n              render={props => <Confirmation {...props} />}\n            />\n            <Route\n              path=\"/TransactionHandle\"\n              render={props => <TransactionHandle {...props} />}\n            />\n            <Route path=\"/receipt\" render={props => <Receipt {...props} />} />\n            <Route\n              path=\"/account\"\n              component={Account}\n              render={props => <Account {...props} />}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\nexport default App;\n\n//render={(props) => <Reserve parkingLot={name: \"\", location: \"\",}/>} component={Reserve}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'; //library from node_modules folder\nimport ReactDOM from 'react-dom'; //library from node_modules folder\nimport './index.css';     \nimport App from './App'; //subcomponent\nimport * as serviceWorker from './serviceWorker'; //make application modern and compatible with mobile devices\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Parking-Logo.5a95957d.svg\";"],"sourceRoot":""}