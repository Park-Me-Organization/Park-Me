{"version":3,"sources":["Assets/Parking-Logo.svg","parking.geojson","Firebase.js","Navigation.js","FormError.js","Login.js","MapboxAJAX.js","Slider.js","Mapbox.js","UserInput.js","Register.js","UserInfo.js","VehicleDetails.js","TransactionHandle.js","Receipt.js","Confirmation.js","ReservationDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Navigation","this","props","user","logOutUser","className","to","src","Logo","width","height","alt","onClick","e","Component","FormError","theMessage","Login","state","email","password","errorMessage","handleChange","bind","handleSubmit","itemName","target","name","itemValue","value","setState","registrationInfo","preventDefault","signInWithEmailAndPassword","then","catch","error","message","style","marginTop","onSubmit","padding","marginLeft","marginRight","htmlFor","required","type","id","placeholder","onChange","getResults","createMuiTheme","overrides","MuiSlider","thumb","color","track","rail","makeStyles","root","input","coordinates","UserInput","address","textAlign","display","justifyContent","$","require","Mapbox","lng","lat","zoom","geolat","geolong","currPage","curLat","curLng","toReservationDetails","handleClick","buttonRef","React","createRef","mapboxgl","accessToken","map","Map","container","mapContainer","center","limit","parkingdata","bbox","self","geocoder","MapboxGeocoder","marker","types","render","item","properties","maki","text","SearchBox","document","getElementById","appendChild","onAdd","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","showAccuracyCircle","on","features","geometry","slice","place_name","Math","abs","lngLat","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","result","remove","mainMarker","createElement","Marker","query","ajax","method","url","done","data","console","log","forEach","el","undefined","substring","indexOf","pData","toUpperCase","hours","open","close","price","popup","current","getElementsByName","addEventListener","setPopup","getElement","pathname","parkingData","ref","Register","lname","phonenumber","passOne","passTwo","toHomePage","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","validation","inputString","regex","me","isValid","i","length","test","charAt","UserInfo","license","finalRegistrationInfo","toVehicleDetails","handleSelect","location","Button","backgroundColor","borderColor","fontFamily","years","Array","from","val","index","toString","VehicleDetails","make","model","year","plate","toConfirmation","vehicleMake","vehicleModel","vehicleYear","vehicleColor","vehiclePlate","carMake","car","carModels","TransactionHandle","toReceipt","Receipt","Confirmation","toTransactionHandle","flexDirection","alignItems","maxWidth","margin","borderRadius","fontSize","paddingLeft","float","startReservation","endReservation","now","Date","getTodayAtSpecificHour","hour","set","minutes","timelineInterval","ReservationDetails","errorHandler","onChangeCallback","selectedInterval","disabledIntervals","start","end","getHours","toUserInfo","lotName","format","ticksNumber","onUpdateCallback","App","registerUser","userName","onAuthStateChanged","FBUser","userID","uid","navigate","signOut","exact","path","component","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8500a6ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Parking-Logo.5a95957d.svg\";","module.exports = __webpack_public_path__ + \"static/media/parking.4aadf9fe.geojson\";","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBg4RHnJAGKRxZbuyAxjJEmZ6N8d2mvPY0\",\n    authDomain: \"park-me-web.firebaseapp.com\",\n    databaseURL: \"https://park-me-web.firebaseio.com\",\n    projectId: \"park-me-web\",\n    storageBucket: \"park-me-web.appspot.com\",\n    messagingSenderId: \"696794983879\",\n    appId: \"1:696794983879:web:da7fd98f906dfc77637de2\",\n    measurementId: \"G-FEXGBWQGEY\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export const provider = new firebase.auth.GoogleAuthProvider();\n  export const auth = firebase.auth();\n  export default firebase;","import React, { Component } from \"react\";\n// import Logo from \"./Parking-Logo.svg\";\nimport Logo from \"./Assets/Parking-Logo.svg\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Navigation extends Component {\n  render() {\n    const { user, logOutUser } = this.props;\n\n    return (\n      <div>\n        {\" \"}\n        <nav className=\"site-nav family-sans navbar navbar-expand navbar-dark higher\">\n          <style>\n            {\n              \"\\\n        .navbar{\\\n          background-color: Black;\\\n        }\\\n      \"\n            }\n          </style>\n\n          <div className=\"container-fluid\">\n            <NavLink className=\"navbar-brand\" to=\"/Park-Me\">\n              <img src={Logo} width=\"30\" height=\"30\" alt=\"Logo\" />\n            </NavLink>\n\n            <div className=\"navbar-nav ml-auto\">\n              <NavLink className=\"nav-item nav-link\" to=\"/account\">\n                {\" \"}\n                {this.props.user}\n              </NavLink>\n\n              {user == null && (\n                <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                  Log In\n                </NavLink>\n              )}\n\n              {user == null && (\n                <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                  Register\n                </NavLink>\n              )}\n              {user && (\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  to=\"/\"\n                  onClick={e => logOutUser(e)}\n                >\n                  Log Out\n                </NavLink>\n              )}\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\n\nclass FormError extends Component {\nrender(){\n    const {theMessage} = this.props;\n    \n    return(\n        <div className=\"col-12 alert alert-danger px-3\">\n            {theMessage}\n        </div>\n        )\n    }\n}\nexport default FormError;","import React, {Component} from 'react';\nimport firebase from './Firebase';\nimport FormError from './FormError';\nimport {navigate} from '@reach/router';\nimport './App.css';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errorMessage: null\n            };\n            this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n            this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n    handleChange(e){        //Collects the value for each item name\n\n        const itemName = e.target.name;\n        const itemValue = e.target.value;\n\n        this.setState({[itemName]: itemValue});\n    }\n\n    handleSubmit(e){\n        var registrationInfo = {\n        email: this.state.email,\n        password : this.state.password\n        }\n\n        e.preventDefault();\n        //push an authentication event into the fireabse database\n\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.password\n        )\n        .then(()=>{\n        })\n        .catch(error =>{\n            if (error.message !== null){\n                this.setState({errorMessage: error.message});\n                \n            } else{\n                this.setState({errorMessage: null});\n            }\n        })\n    }\n\n\n    render(){\n      \n        return(\n          <form className=\"main-form\" style={{marginTop: \"2%\"}} onSubmit={this.handleSubmit}>\n            <div className=\"container\" style={{padding: \"0px\"}} >\n              <div className=\"row\" >\n                  <div className=\"card bg-light\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"500px\"}}>\n                    <div className=\"card-body\">\n                      <h3 className=\"font-weight-light mb-3\">Log in</h3>\n                      <section className=\"form-group\">\n                      {this.state.errorMessage !== null ? (\n                                                      <FormError theMessage = {this.state.errorMessage}\n                                                      />\n                                                      ): null}\n                        <label\n                          className=\"form-control-label sr-only\"\n                          htmlFor=\"Email\">\n                          Email\n                        </label>\n                        <input\n                          required\n                          className=\"form-control\"\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"email\"\n                          placeholder=\"Email\"\n                          value={this.state.email}\n                          onChange={this.handleChange}\n                        />\n                      </section>\n                      <section className=\"form-group\">\n                        <input\n                          required\n                          className=\"form-control\"\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                          value={this.state.password}\n                          onChange={this.handleChange}\n\n                        />\n                      </section>\n                      <div className=\"form-group text-right mb-0\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                          Log in\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </form>\n        )\n    }\n}\n\nexport default Login;\n","/* function updateRoute() {\n    // Set the searchtem\n    var searchtem = \"driving\";\n    // Get the coordinates that were drawn on the map\n    var data = draw.getAll();\n    var lastFeature = data.features.length - 1;\n    var coords = data.features[lastFeature].geometry.coordinates;\n    // Format the coordinates\n    var newCoords = coords.join(';')\n    // Set the radius for each coordinate pair to 25 meters\n    \n   // getMatch(newCoords, radius, searchtem);\n  } */\n// Make a Map Matching request\nimport \"./Mapbox\";\nvar querydata;\nvar coordinates;\nfunction getResults(long, lat) {\n  // Create the query\n  var query =\n    \"https://api.mapbox.com/geocoding/v5/mapbox.places/parking.json?limit=10&proximity=\" +\n    long +\n    \",\" +\n    lat +\n    \"&types=poi&&access_token=pk.eyJ1IjoicmFmYWVsaGR6YSIsImEiOiJja2dzeHJjbnMwZzE3MnJtNWV6cHVsam9sIn0.7oigwdpk6AYK5VqUZq3phg\";\n  var $ = require(\"jquery\");\n  $.ajax({\n    method: \"GET\",\n    url: query,\n  }).done(function (data) {\n    // Get the data from the response\n    querydata = JSON.stringify(data);\n    coordinates = data.features[0].geometry.coordinates;\n    // Set  markers of locations on the map\n    //console.log(\"The coordinates: \" + coordinates)\n    //console.log(\"The data \"+ querydata);\n    //addQuery(coordinates)\n  });\n}\n\n/* function addQuery(coordinates) {\n\n  map.addLayer({\n      \"id\": \"locations\",\n      \"type\": \"symbol\",\n      \"source\": {\n        \"type\": \"geojson\",\n        \"data\": {\n          \"type\": \"Feature\",\n          \"properties\": {},\n          \"geometry\": coordinates\n        }\n      },\n      \"layout\": {\n        \"icon-image\": \"parking-15\",\n          \"icon-allow-overlap\": true,\n      },\n    });\n  };  */\nexport default getResults;\nexport { querydata };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst muiTheme = createMuiTheme({\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        color: \"#1A2637\",\n      },\n      track: {\n        color: \"1A2637\",\n      },\n      rail: {\n        color: \"black\",\n      },\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    width: 200,\n  },\n  input: {\n    width: 38,\n  },\n});\n\nexport default function InputSlider() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(5);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <ThemeProvider theme={muiTheme}>\n            <Slider\n              value={typeof value === \"number\" ? value : 0}\n              onChange={handleSliderChange}\n              aria-labelledby=\"input-slider\"\n            />\n          </ThemeProvider>\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: \"number\",\n              \"aria-labelledby\": \"input-slider\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport \"./App.css\";\nimport * as parkingdata from \"./parking.geojson\";\nimport getResults from \"./MapboxAJAX\";\nimport UserInput from \"./UserInput\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport ReactDOM from \"react-dom\";\nimport { render } from \"@testing-library/react\";\n\n//import {querydata} from './MapboxAJAX';\n\nvar coordinates;\nvar $ = require(\"jquery\");\n\nclass Mapbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -84.387,\n      lat: 33.749,\n      zoom: 13,\n      input: \"\",\n      geolat: null,\n      geolong: null,\n      currPage: \"Search\",\n      curLat: 0.0,\n      curLng: 0.0,\n      toReservationDetails: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.buttonRef = React.createRef();\n  }\n\n  handleClick() {\n    this.setState({ toReservationDetails: true });\n  }\n  componentDidMount(props) {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibmFkaW1rMSIsImEiOiJja2doaGh5dWowM292MnpudW03MHc2MzdwIn0.TU9JkM8-F3FZ5RKTTO3n9A\";\n\n    //Mapbox Map View\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: \"mapbox://styles/nadimk1/ckghhntfd19g51ao0zjbqcu65\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      limit: 10,\n      parkingdata: {},\n      bbox: [-84.401037, 33.745468, -84.370436, 33.768017] //min long, min lag, max long, max lat\n    });\n\n    const self = this;\n    //Geocoder\n    const geocoder = new MapboxGeocoder({\n      // Initialize the geocoder\n      accessToken: mapboxgl.accessToken, // Set the access token\n      mapboxgl: mapboxgl, // Set the mapbox-gl instance\n      placeholder: \"Address, Place, City or Venue\",\n      marker: false, // Do not use the default marker style\n      limit: 10, //limits the search suggestion results\n      types: \"poi\",\n      //render geocoder for suggested list of items with logo,text and address\n      render: function(item) {\n        var maki = item.properties.maki || \"marker\";\n        {\n          return (\n            \"<div class='geocoder-dropdown-item'><img class='geocoder-dropdown-icon' src='https://unpkg.com/@mapbox/maki@6.1.0/icons/\" +\n            maki +\n            \"-15.svg'><span class='geocoder-dropdown-text'> \" +\n            item.text +\n            \"</span><span class='geocoder-dropdown-text'> <br>\" +\n            item.properties.address +\n            \"</span></div>\"\n          );\n        }\n      }\n    });\n\n    // Add the geocoder to the map\n    //map.addControl(geocoder);\n\n    const SearchBox = document.getElementById(\"geocoder\");\n    if (SearchBox != null) {\n      SearchBox.appendChild(geocoder.onAdd(map));\n    }\n    // document.getElementById(\"geocoder\").appendChild(geocoder.onAdd(map));\n\n    //Locate button\n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true,\n        showAccuracyCircle: true\n      })\n    );\n\n    // After the map style has loaded on the page,\n    // add a source layer and default styling for a single point\n    map.on(\"load\", function() {\n      /*       map.addSource(\"locations\", {\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: [],\n        },\n      }); */\n      //add single point mark for geocoder result\n      /*  map.addLayer({\n        id: \"point\",\n        source: \"single-point\",\n        type: \"symbol\",\n        layout: {\n          \"icon-image\": \"parking-15\",\n          \"icon-allow-overlap\": true,\n        },\n      }); */\n\n      //     add parking spots from json file\n\n      //   map.addLayer({\n      //   id: \"parkingpoints\",\n      //   type: \"symbol\",\n      //    /* Add a GeoJSON source containing place coordinates and information. */\n      //    source: \"locations\",\n      //    layout: {\n      //      \"icon-image\": \"parking-15\",\n      //      \"icon-allow-overlap\": true,\n      //    },\n      //  });\n      map.on(\"click\", \"locations\", function(e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var address = e.features[0].properties.address;\n        var place_name = e.features[0].place_name;\n        // Ensure that if the map is zoomed out such that multiple\n        //copies of the feature are visible, the popup appears\n        //over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(\"<h3>\" + place_name + \"</h3>\" + \"<p>\" + address + \"</p>\")\n          .addTo(map);\n      });\n      // Change the cursor to a pointer when the mouse is over the places layer.\n      map.on(\"mouseenter\", \"locations\", function() {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      //        Change it back to a pointer when it leaves.\n      map.on(\"mouseleave\", \"locations\", function() {\n        map.getCanvas().style.cursor = \"\";\n      });\n\n      //take location input from geocoder and place markers at the 10 closest\n      // parking lots from entered location\n      geocoder.on(\"result\", function(result) {\n        $(\".marker\").remove();\n        $(\".Main-Marker\").remove();\n        // create div for the marker\n        var mainMarker = document.createElement(\"div\");\n        mainMarker.className = \"Main-Marker\";\n\n        // add marker to map\n        new mapboxgl.Marker(mainMarker)\n          .setLngLat(result.result.geometry.coordinates)\n          .addTo(map);\n\n        // create the query\n        var query =\n          \"https://api.mapbox.com/geocoding/v5/mapbox.places/parking.json?limit=10&proximity=\" +\n          result.result.geometry.coordinates[0] +\n          \",\" +\n          result.result.geometry.coordinates[1] +\n          \"&types=poi&&access_token=pk.eyJ1IjoicmFmYWVsaGR6YSIsImEiOiJja2dzeHJjbnMwZzE3MnJtNWV6cHVsam9sIn0.7oigwdpk6AYK5VqUZq3phg\";\n\n        $.ajax({\n          method: \"GET\",\n          url: query\n        }).done(function(data) {\n          console.log(\"data: \", data);\n          // Get the data from the response\n          coordinates = data.features[0].geometry.coordinates;\n          // Set  markers of locations on the map\n          console.log(\"The coordinates: \" + coordinates);\n\n          data.features.forEach(function(marker, props) {\n            // create a DOM element for the marker\n            var el = document.createElement(\"div\");\n            el.className = \"marker\";\n\n            var address =\n              marker.properties.address == undefined\n                ? marker.place_name.substring(\n                    marker.place_name.indexOf(\",\") + 1\n                  )\n                : marker.properties.address;\n\n            var directBtn = document.createElement(\"div\");\n\n            // reactDom.render(<Redirect to={{\n            //   pathname: \"/reserve\",\n            //   state: {name: marker.text.toUpperCase(), parkingAddress: address, spots: \"5\" }\n            // }},directBtn );\n\n            var pData = {\n              name: marker.text.toUpperCase(),\n              hours: {\n                open: 6,\n                close: 20\n              },\n              price: 5,\n              address: address\n            };\n\n            var description = `<h1>Hello World!</h1> \n            <button className=\"btn\" ref=${self.buttonRef.current}>todo</button>`;\n            var popupInfo =\n              '<h1 id=\"popupTitle\">' +\n              marker.text.toUpperCase() +\n              \"</h1>\" +\n              '<p id=\"popupDetails\" >' +\n              address +\n              \"</p>\" +\n              '<p id=\"popupDetails\"> 5 spots remaining </p>' +\n              '<div id=\"aContainer\"><a style=\"background-color: #1A2637;border-color: white;font-family:\"Roboto Slab\";\" class=\"btn btn-primary\" href=\"/reserve\"> RESERVE </a></div>';\n            // var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(description);\n            var popup = new mapboxgl.Popup()\n              .setLngLat([-96, 37.8])\n              .setHTML(\n                `<h1 id=\"popupTitle\"> ${marker.text.toUpperCase()} </h1><p id=\"popupDetails\" >${address}</p><div id=\"aContainer\">\n    <button style=\"background-color: #1A2637;font-family:\"Roboto Slab\";border-color: white;\" Name=\"btn\" class=\"btn btn-primary\" ref=${\n      self.buttonRef.current\n    }>RESERVE</button></div>`\n              )\n              .addTo(map);\n            const btn = document.getElementsByName(\"btn\")[0];\n            btn.addEventListener(\"click\", self.handleClick);\n\n            // add marker to map\n            new mapboxgl.Marker(el)\n              .setLngLat(marker.geometry.coordinates)\n              .setPopup(popup)\n              .addTo(map)\n              .getElement()\n              .addEventListener(\"click\", () => {\n                self.setState({\n                  pData: pData\n                });\n              });\n          });\n        });\n      });\n    });\n  }\n\n  render() {\n    if (this.state.toReservationDetails === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/reservationdetails\",\n            state: { parkingData: this.state.pData }\n          }}\n        />\n      );\n    }\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\" id=\"input-side\">\n            <UserInput />\n          </div>\n          <div ref={el => (this.mapContainer = el)} className=\"col-lg-8\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mapbox;\n","import React, { Component, useState } from \"react\";\nimport Slider from \"./Slider.js\";\nimport Button from \"react-bootstrap/Button\";\nimport { flexbox } from \"@material-ui/system\";\n\nclass UserInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"Title\">Where Do You Want To Go?</h1>\n        <div\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            width: \"55%\",\n            textAlign: \"center\"\n          }}\n        >\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div id=\"geocoder\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserInput;\n// function UserInput(props) {\n//   const [currPage, setCurrPage] = useState([\"Search\"]);\n\n//   function changePage() {\n//     console.log(\"changePage | \", currPage);\n//     if (currPage == \"Search\") {\n//       setCurrPage(\"Slider\");\n//       console.log(\"after change: \", currPage);\n//       console.log(document.getElementById(\"geocoder\"));\n//     } else if (currPage == \"Slider\") {\n//       setCurrPage(\"Search\");\n//       console.log(\"after change:\", currPage);\n//       console.log(document.getElementById(\"geocoder\"));\n//     }\n//   }\n\n//   //Search bar input | for address\n//   function SearchInput(props) {\n//     return (\n//       <div>\n//         <h1 id=\"Title\">Where Do You Want To Go?</h1>\n//         <div\n//           style={{\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             width: \"55%\",\n//             textAlign: \"center\",\n//           }}\n//         >\n//           <div id=\"geocoder\"></div>\n//         </div>\n\n//         <Button\n//           variant=\"secondary\"\n//           style={{\n//             marginTop: \"20px\",\n//             backgroundColor: \"#1A2637\",\n//             width: \"100px\",\n//             padding: \"8px\",\n//             fontfamily: \"Roboto Slab\",\n//           }}\n//           onClick={changePage}\n//         >\n//           GO\n//         </Button>\n//       </div>\n//     );\n//   }\n\n//   //slider input | for search range\n//   function SliderPage(props) {\n//     return (\n//       <div>\n//         <h1 id=\"Title\">What is your radius?</h1>\n//         <div\n//           style={{\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             width: \"50%\",\n//             textAlign: \"center\",\n//           }}\n//         >\n//           <Slider />\n\n//           <Button\n//             variant=\"secondary\"\n//             style={{\n//               marginTop: \"20px\",\n//               backgroundColor: \"#1A2637\",\n//               width: \"100px\",\n//               padding: \"8px\",\n//               fontfamily: \"Roboto Slab\",\n//             }}\n//             onClick={changePage}\n//           >\n//             GO\n//           </Button>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   //controls viewable component | conditional components\n//   function InputPage(props) {\n//     console.log(currPage);\n//     if (currPage == \"Search\") {\n//       console.log(\"search page\");\n//       return <SearchInput />;\n//     }\n//     return <SliderPage />;\n//   }\n\n//   return (\n//     <div>\n//       <InputPage />\n//     </div>\n//   );\n// }\n\n// export default UserInput;\n","import React, {Component} from 'react';\nimport FormError from './FormError';\nimport firebase from './Firebase'\nimport { Redirect } from \"react-router-dom\";\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            lname:'',\n            email: '',\n            phonenumber:'',\n            passOne: '',\n            passTwo: '',\n            errorMessage: null\n            };\n            \n        this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n        this.handleSubmit = this.handleSubmit.bind(this);\n        }\n    \n    handleChange(e){        //Collects the value for each item name\n    \n        const itemName = e.target.name;\n        const itemValue = e.target.value;\n\n        this.setState({[itemName]: itemValue}, () => {\n         if (this.state.passOne !== this.state.passTwo){\n             this.setState({errorMessage:'Passwords do not match'});\n         }   \n         else {\n             this.setState({errorMessage: null});\n         }\n        });\n    }    \n\n    handleSubmit(e){\n\n        var registrationInfo = {\n        user : this.state.user, \n        lname: this.state.lname,\n        email: this.state.email,\n        phonenumber : this.state.phonenumber,\n        passOne : this.state.passOne\n        }\n        console.log(\"registrationInfo: \", registrationInfo);\n        this.setState({\n            toHomePage: true,\n            user: registrationInfo.user,\n          });\n        e.preventDefault();\n        \n        //push an authentication event into the fireabse database        \n        firebase\n        .auth()\n        .createUserWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.passOne\n        )\n        .then(function() {\n            if (firebase.auth().currentUser != null) {\n                firebase.auth().currentUser.updateProfile({\n                    displayName: registrationInfo.user\n                }).then(function() { \n                    console.log(\"Updated\");\n                }, function (error){\n                    console.log(\"Error happened\");\n                });\n            }\n        });\n    }\n            ///   \n            /* this.setState({\n                user: registrationInfo.user,\n              });\n            console.log(\"registrationInfo.user: \", registrationInfo.user);\n        })\n        .catch(error =>{\n            if (error.message !== null){\n                this.setState({errorMessage: error.message});\n            } else{\n                this.setState({errorMessage: null});\n            }\n        }); */\n            \n    \n    render(){ \n        if (this.state.toHomePage === true) {\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/\",\n                  state: this.state.user,\n                }}\n              />\n            );\n          }       \n        return (\n            <form className=\"main-form\" style={{marginTop: \"2%\"}} onSubmit={this.handleSubmit}>\n                <div className=\"container\" style={{padding: \"0px\"}}>\n                    <div className=\"row\">\n                            <div className=\"card bg-light\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: \"650px\"}}>\n                                <div className=\"card-body\">\n                                    <h3 className=\"font-weight-light mb-3\">Register</h3>\n                                    <div className=\"form-row\">\n                                            {this.state.errorMessage !== null ? (\n                                            <FormError \n                                            theMessage = {this.state.errorMessage}\n                                            />\n                                            ): null}\n                                        <section className=\"col-sm-6 form-group\">\n                                            <label\n                                                className=\"form-control-label sr-only\"\n                                                htmlFor=\"user\"\n                                            >\n                                                Name\n                                            </label>\n                                            <input\n                                                className=\"form-control\"\n                                                type=\"text\"\n                                                id=\"user\"\n                                                placeholder=\"First Name\"\n                                                name=\"user\"\n                                                required\n                                                value = {this.state.user}\n                                                onChange = {this.handleChange}\n                                                />\n                                        </section>\n                                        <section className=\"col-sm-6 form-group\">\n                                            <label\n                                                className=\"form-control-label sr-only\"\n                                                htmlFor=\"lname\"\n                                            >\n                                                Last Name\n                                            </label>\n                                            <input\n                                                className=\"form-control\"\n                                                type=\"text\"\n                                                id=\"lname\"\n                                                placeholder=\"Last Name\"\n                                                name=\"lname\"\n                                                required\n                                                value = {this.state.lname}\n                                                onChange = {this.handleChange}\n                                                />\n                                        </section>\n                                    </div>\n                                    <section className=\"form-group\">\n                                        <label\n                                            className=\"form-control-label sr-only\"\n                                            htmlFor=\"email\"\n                                        >\n                                            Email\n                                        </label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"email\"\n                                            id=\"email\"\n                                            placeholder=\"Email Address\"\n                                            required\n                                            name=\"email\" \n                                            value = {this.state.email}\n                                                onChange = {this.handleChange}\n                                            />\n                                    </section>\n                                    <section className=\"form-group\">\n                                        <label\n                                            className=\"form-control-label sr-only\"\n                                            htmlFor=\"phonenumber\"\n                                        >\n                                            PhoneNumber\n                                        </label>\n                                        <input\n                                            className=\"form-control\"\n                                            type=\"tel\"\n                                            id=\"phonenumber\"\n                                            placeholder=\"Phone Number\"\n                                            required\n                                            name=\"phonenumber\" \n                                            value = {this.state.phonenumber}\n                                                onChange = {this.handleChange}\n                                            />\n                                    </section>\n                                    <div className=\"form-row\">\n                                        <section className=\"col-sm-6 form-group\">\n                                            <input\n                                                className=\"form-control\"\n                                                type=\"password\"\n                                                name=\"passOne\"\n                                                placeholder=\"Password\" \n                                                value = {this.state.passOne}\n                                                onChange = {this.handleChange}\n                                                />\n                                        </section>\n                                        <section className=\"col-sm-6 form-group\">\n                                            <input\n                                                className=\"form-control\"\n                                                type=\"password\"\n                                                required\n                                                name=\"passTwo\"\n                                                placeholder=\"Retype Password\" \n                                                value = {this.state.passTwo}\n                                                onChange = {this.handleChange}\n                                                />\n                                        </section>\n                                    </div>\n                                    <div className=\"form-group text-right mb-0\">\n                                        <button className=\"btn btn-primary\" type=\"submit\">\n                                                                                Register\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                </div>\n            </form>\n        );\n    }\n    }\n\nexport default Register;","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { getMatches, isValid } from \"driver-license-validator\";\n\nvar validation = function(inputString, regex, me) {\n  var alpha = true;\n  console.log(\"regex: \", regex);\n  if (regex === \"license\") {\n    console.log(\"inside license: \", inputString);\n    return isValid(inputString);\n  }\n  for (var i = 0; i < inputString.length; i++) {\n    if (!regex.test(inputString.charAt(i))) {\n      return false;\n    } else {\n      continue;\n    }\n  }\n  return alpha;\n};\n\nclass UserInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      license: \"\",\n      state: \"\",\n      finalRegistrationInfo: {},\n      toVehicleDetails: false,\n      errorMessage: null\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSelect(e) {\n    this.setState({\n      state: e.target.value\n    });\n  }\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n    var me = this;\n    if (\n      validation(this.state.user, /^[a-zA-Z -]*$/i) == false &&\n      itemName == \"user\"\n    ) {\n      console.log(\"first | \", itemName);\n      this.setState({\n        errorMessage:\n          'Incorrect format for First Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n      });\n    } else if (\n      validation(this.state.lname, /^[a-zA-Z -]*$/i) == false &&\n      itemName == \"lname\"\n    ) {\n      console.log(\"second | \", itemName);\n      this.setState({\n        errorMessage:\n          'Incorrect format for Last Name. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n      });\n    } else if (\n      validation(this.state.license, \"license\", me) == false &&\n      itemName == \"license\"\n    ) {\n      console.log(\"third | \", itemName);\n      this.setState({\n        errorMessage:\n          'Incorrect format for License. Only Letters, spaces \" \", and hyphens \"-\" are accepted.'\n      });\n    } else {\n      this.setState({\n        errorMessage: null\n      });\n    }\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      license: this.state.license,\n      state: this.state.state,\n      parkingData: this.props.location.state.parkingData\n    };\n    console.log(\"registrationInfo: \", registrationInfo);\n    this.setState({\n      toVehicleDetails: true,\n      finalRegistrationInfo: registrationInfo\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toVehicleDetails === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/vehicleDetails\",\n            state: this.state.finalRegistrationInfo\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\"\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">\n                  Let's get some details\n                </h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"user\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"user\"\n                      placeholder=\"First Name\"\n                      name=\"user\"\n                      required\n                      value={this.state.user}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"lname\"\n                    >\n                      Last Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"lname\"\n                      placeholder=\"Last Name\"\n                      name=\"lname\"\n                      required\n                      value={this.state.lname}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <section className=\"form-group\">\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\n                    Email\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email Address\"\n                    required\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <section className=\"form-group\">\n                  <label\n                    className=\"form-control-label sr-only\"\n                    htmlFor=\"phonenumber\"\n                  >\n                    PhoneNumber\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"tel\"\n                    id=\"phonenumber\"\n                    placeholder=\"phone number\"\n                    required\n                    name=\"phonenumber\"\n                    value={this.state.phonenumber}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <div className=\"form-row\">\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"license\"\n                      placeholder=\"License Number\"\n                      value={this.state.license}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"state\"\n                      className=\"custom-select mr-sm-2\"\n                      value={this.state.state}\n                      onChange={this.handleSelect}\n                    >\n                      <option value=\"AL\">Alabama</option>\n                      <option value=\"AK\">Alaska</option>\n                      <option value=\"AZ\">Arizona</option>\n                      <option value=\"AR\">Arkansas</option>\n                      <option value=\"CA\">California</option>\n                      <option value=\"CO\">Colorado</option>\n                      <option value=\"CT\">Connecticut</option>\n                      <option value=\"DE\">Delaware</option>\n                      <option value=\"DC\">District of Columbia</option>\n                      <option value=\"FL\">Florida</option>\n                      <option value=\"GA\">Georgia</option>\n                      <option value=\"HI\">Hawaii</option>\n                      <option value=\"ID\">Idaho</option>\n                      <option value=\"IL\">Illinois</option>\n                      <option value=\"IN\">Indiana</option>\n                      <option value=\"IA\">Iowa</option>\n                      <option value=\"KS\">Kansas</option>\n                      <option value=\"KY\">Kentucky</option>\n                      <option value=\"LA\">Louisiana</option>\n                      <option value=\"ME\">Maine</option>\n                      <option value=\"MD\">Maryland</option>\n                      <option value=\"MA\">Massachusetts</option>\n                      <option value=\"MI\">Michigan</option>\n                      <option value=\"MN\">Minnesota</option>\n                      <option value=\"MS\">Mississippi</option>\n                      <option value=\"MO\">Missouri</option>\n                      <option value=\"MT\">Montana</option>\n                      <option value=\"NE\">Nebraska</option>\n                      <option value=\"NV\">Nevada</option>\n                      <option value=\"NH\">New Hampshire</option>\n                      <option value=\"NJ\">New Jersey</option>\n                      <option value=\"NM\">New Mexico</option>\n                      <option value=\"NY\">New York</option>\n                      <option value=\"NC\">North Carolina</option>\n                      <option value=\"ND\">North Dakota</option>\n                      <option value=\"OH\">Ohio</option>\n                      <option value=\"OK\">Oklahoma</option>\n                      <option value=\"OR\">Oregon</option>\n                      <option value=\"PA\">Pennsylvania</option>\n                      <option value=\"RI\">Rhode Island</option>\n                      <option value=\"SC\">South Carolina</option>\n                      <option value=\"SD\">South Dakota</option>\n                      <option value=\"TN\">Tennessee</option>\n                      <option value=\"TX\">Texas</option>\n                      <option value=\"UT\">Utah</option>\n                      <option value=\"VT\">Vermont</option>\n                      <option value=\"VA\">Virginia</option>\n                      <option value=\"WA\">Washington</option>\n                      <option value=\"WV\">West Virginia</option>\n                      <option value=\"WI\">Wisconsin</option>\n                      <option value=\"WY\">Wyoming</option>\n                    </select>\n                  </section>\n                </div>\n                <div className=\"form-group text-right mb-0\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#1A2637\",\n                      borderColor: \"white\",\n                      fontFamily: \"Roboto Slab\"\n                    }}\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default UserInfo;\n\n//first&last name: /^[a-zA-Z -]*$/i\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport carMake from \"./Data/CarMake.json\";\nimport carModels from \"./Data/CarModels.json\";\n\n// console.log(\"make: \", carMake);\n// console.log(\"models: \", carModels);\n\nconst years = Array.from(new Array(80), (val, index) =>\n  (2020 - index).toString()\n);\n\nclass VehicleDetails extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location.state);\n    this.state = {\n      user: this.props.location.state.user,\n      lname: this.props.location.state.lname,\n      email: this.props.location.state.email,\n      phonenumber: this.props.location.state.phonenumber,\n      license: this.props.location.state.license,\n      state: this.props.location.state.state,\n      make: \"\",\n      model: \"\",\n      year: \"\",\n      color: \"\",\n      plate: \"\",\n      finalRegistrationInfo: {},\n      toConfirmation: false,\n      errorMessage: null\n    };\n\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSelect(e) {\n    this.setState({\n      make: e.target.value\n    });\n  }\n\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      license: this.state.license,\n      state: this.state.state,\n      parkingData: this.props.location.state.parkingData,\n      vehicleMake: this.state.make,\n      vehicleModel: this.state.model,\n      vehicleYear: this.state.year,\n      vehicleColor: this.state.color,\n      vehiclePlate: this.state.plate\n    };\n    console.log(\"registrationInfo: \", registrationInfo);\n    this.setState({\n      toConfirmation: true,\n      finalRegistrationInfo: registrationInfo\n    });\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toConfirmation === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/confirmation\",\n            state: this.state.finalRegistrationInfo\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\"\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">\n                  Tell us about that ride\n                </h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"state\"\n                      className=\"custom-select my-1 mr-sm-2\"\n                      value={this.state.make}\n                      onChange={this.handleSelect}\n                    >\n                      {carMake.map(car => (\n                        <option value={car}>{car}</option>\n                      ))}\n                    </select>\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"state\"\n                      className=\"custom-select my-1 mr-sm-2\"\n                      value={this.state.year}\n                      onChange={this.handleSelect}\n                    >\n                      {years.map(year => (\n                        <option value={year}>{year}</option>\n                      ))}\n                    </select>\n                  </section>\n                </div>\n\n                <div className=\"form-row\">\n                  <section className=\"col-sm-6 form-group\">\n                    <select\n                      name=\"state\"\n                      className=\"custom-select mr-sm-2\"\n                      value={this.state.year}\n                      onChange={this.handleSelect}\n                    >\n                      {console.log(this.state.make)}\n                      {this.state.make != null\n                        ? carModels.forEach(make => {\n                            if (this.state.make === make[\"brand\"]) {\n                              make[\"models\"].map(model => (\n                                <option value={model}>{model}</option>\n                              ));\n                            }\n                          })\n                        : this.setState({\n                            error: \"please select a make first\"\n                          })}\n                      {/* {years.map(year => (\n                        <option value={year}>{year}</option>\n                      ))} */}\n                    </select>\n                  </section>\n\n                  <section className=\"form-group col-sm-6\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"phonenumber\"\n                    >\n                      color\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"phonenumber\"\n                      placeholder=\"Color\"\n                      required\n                      name=\"color\"\n                      value={this.state.color}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n\n                <section className=\"form-group\">\n                  <label\n                    className=\"form-control-label sr-only\"\n                    htmlFor=\"phonenumber\"\n                  >\n                    PhoneNumber\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    id=\"LicensePlateNumber\"\n                    placeholder=\"License Plate Number\"\n                    required\n                    name=\"plate\"\n                    value={this.state.plate}\n                    onChange={this.handleChange}\n                  />\n                </section>\n\n                <div className=\"form-group text-right mb-0\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#1A2637\",\n                      borderColor: \"white\",\n                      fontFamily: \"Roboto Slab\"\n                    }}\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default VehicleDetails;\n\n// this.props.location.state.property\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass TransactionHandle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      license: \"\",\n      state: \"\",\n      finalRegistrationInfo: {},\n      toReceipt: false,\n      errorMessage: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      license: this.state.license,\n      state: this.state.state,\n      parkingData: this.props.location.state.parkingData,\n    };\n    this.setState({\n      toVehicleDetails: true,\n      finalRegistrationInfo: registrationInfo,\n    });\n    console.log(registrationInfo);\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toReceipt === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/receipt\",\n            state: this.state,\n          }}\n        />\n      );\n    }\n    return (\n      <form\n        className=\"main-form\"\n        style={{ marginTop: \"2%\" }}\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"container\" style={{ padding: \"0px\" }}>\n          <div className=\"row\">\n            {console.log(\n              \"finalRegistrationInfo: \",\n              this.props.location.state.finalRegistrationInfo\n            )}\n            <div\n              className=\"card bg-light\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"650px\",\n              }}\n            >\n              <div className=\"card-body\">\n                <h3 className=\"font-weight-light mb-3\">\n                  Let's get some details\n                </h3>\n                <div className=\"form-row\">\n                  {this.state.errorMessage !== null ? (\n                    <FormError theMessage={this.state.errorMessage} />\n                  ) : null}\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"user\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"user\"\n                      placeholder=\"First Name\"\n                      name=\"user\"\n                      required\n                      value={this.state.user}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"lname\"\n                    >\n                      Last Name\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"lname\"\n                      placeholder=\"Last Name\"\n                      name=\"lname\"\n                      required\n                      value={this.state.lname}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <section className=\"form-group\">\n                  <label className=\"form-control-label sr-only\" htmlFor=\"email\">\n                    Email\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email Address\"\n                    required\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <section className=\"form-group\">\n                  <label\n                    className=\"form-control-label sr-only\"\n                    htmlFor=\"phonenumber\"\n                  >\n                    PhoneNumber\n                  </label>\n                  <input\n                    className=\"form-control\"\n                    type=\"tel\"\n                    id=\"phonenumber\"\n                    placeholder=\"123-456-7890\"\n                    required\n                    name=\"phonenumber\"\n                    value={this.state.phonenumber}\n                    onChange={this.handleChange}\n                  />\n                </section>\n                <div className=\"form-row\">\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"license\"\n                      placeholder=\"License Number\"\n                      value={this.state.license}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"col-sm-6 form-group\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      required\n                      name=\"state\"\n                      placeholder=\"License State\"\n                      value={this.state.state}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                </div>\n                <div className=\"form-group text-right mb-0\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#1A2637\",\n                      borderColor: \"white\",\n                      fontFamily: \"Roboto Slab\",\n                    }}\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default TransactionHandle;\n\n// this.props.location.state.property\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Receipt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      lname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      license: \"\",\n      state: \"\",\n      finalRegistrationInfo: {},\n      toReceipt: false,\n      errorMessage: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this); //constructor <-handle change\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      passOne: this.state.passOne,\n      license: this.state.license,\n      state: this.state.state,\n    };\n    this.setState({\n      toVehicleDetails: true,\n      finalRegistrationInfo: registrationInfo,\n    });\n    console.log(registrationInfo);\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toReceipt === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/receipt\",\n            state: this.state,\n          }}\n        />\n      );\n    }\n    return (\n      <div>\n        <h1>name</h1>\n      </div>\n    );\n  }\n}\n\nexport default Receipt;\n\n// this.props.location.state.property\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Confirmation extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location.state.parkingData)\n    this.state = {\n      user: this.props.location.state.user,\n      lname: this.props.location.state.lname,\n      email: this.props.location.state.email,\n      phonenumber: this.props.location.state.phonenumber,\n      license: this.props.location.state.license,\n      state: this.props.location.state.state,\n      parkingData: this.props.location.state.parkingData,\n      vehicleMake: this.props.location.state.make,\n      vehicleModel: this.props.location.state.model,\n      vehicleYear: this.props.location.state.year,\n      vehicleColor: this.props.location.state.color,\n      vehiclePlate: this.props.location.state.plate, toTransactionHandle: false, toReservationDetails: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e){\n    var itemName = e.target.name;\n\n    if(itemName == \"fix\"){\n      this.setState({toReservationDetails: true})\n    }else{\n      this.setState({toTransactionHandle: true})\n    }\n  }\n  handleChange(e) {\n    //Collects the value for each item name\n\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    var registrationInfo = {\n      user: this.state.user,\n      lname: this.state.lname,\n      email: this.state.email,\n      phonenumber: this.state.phonenumber,\n      license: this.state.license,\n      state: this.state.state,\n      parkingData: this.props.location.state.parkingData\n    };\n    this.setState({\n      toVehicleDetails: true,\n      finalRegistrationInfo: registrationInfo\n    });\n    console.log(registrationInfo);\n    e.preventDefault();\n  }\n\n  render() {\n    if (this.state.toTransactionHandle === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/TransactionHandle\",\n            state: this.state\n          }}\n        />\n      );\n    }else if(this.state.toReservationDetails === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/reservationdetails\",\n            state: this.state\n          }}\n        />\n      );\n        }\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#1A2637\",\n          maxWidth: \"fit-content\",\n          margin: \"10px auto\",\n          padding: \"20px\",\n          borderRadius: \"10px\"\n        }}\n      >\n        <div\n          style={{\n            fontFamily: \"Roboto Slab\",\n            color: \"white\",\n            fontSize: \"1.2rem\",\n            margin: \"20px 0\",\n            textAlign: \"center\"\n          }}\n        >\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\n            Please Confirm Your Information\n          </h1>\n          <hr style={{backgroundColor: \"white\"}}/>\n          <div style={{paddingLeft: \"auto\", paddingLeft: \"10%\"}}>\n          <div style={{textAlign: \"left\", float: \"left\"}}>\n            <h3><u>About You</u></h3>\n          <p>\n            Name:{\" \"}\n            {(this.props.location.state.user).toUpperCase() +\n              \" \" +\n              (this.props.location.state.lname).toUpperCase()}\n          </p>\n          <p>\n            Email:{\" \"}\n            {(this.props.location.state.email)}\n          </p>\n          <p>\n            Phone Number:{\" \"}\n            {(this.props.location.state.phonenumber)}\n          </p>\n          <p>\n            License Number:{\" \"}\n            {(this.props.location.state.license)}\n          </p>\n          <p>\n            State:{\" \"}\n            {(this.props.location.state.state)}\n          </p>\n          </div>\n          <div style={{textAlign: \"left\", float: \"left\", marginLeft: \"20px\"}}>\n            <h3><u>Vehicle</u></h3>\n          <p>\n            Make:{\" \"}\n            {this.props.location.state.make}\n          </p>\n          <p>\n            model:{\" \"}\n            {(this.props.location.state.model)}\n          </p>\n          <p>\n            year:{\" \"}\n            {(this.props.location.state.year)}\n          </p>\n          <p>\n            Color:{\" \"}\n            {(this.props.location.state.color)}\n          </p>\n          <p>\n            License Plate:{\" \"}\n            {(this.props.location.state.plate)}\n          </p>\n          </div>\n          <div style={{textAlign: \"left\", float: \"left\", marginLeft: \"40px\", marginRight: \"auto\", width: \"30%\"}}>\n            <h3><u>Reservation</u></h3>\n          <p>\n            Name:{\" \"}\n            {this.props.location.state.parkingData.name}\n          </p>\n          <p>\n            Hours:{\" \"}\n            {(this.props.location.state.parkingData.hours.open + \":00 to \" + this.props.location.state.parkingData.hours.close)}\n          </p>\n          <p>\n            Address:{\" \"}\n            {(this.props.location.state.parkingData.address)}\n          </p>\n          <p>\n            Price:{\" \"}\n            {(this.props.location.state.parkingData.price)}\n          </p>\n          <p>\n            Reservation:{\" \"}\n            {(this.props.location.state.parkingData.startReservation+ \" to \" + this.props.location.state.parkingData.endReservation)}\n          </p>\n          </div>\n          </div>\n        </div>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n        <Button className=\"btn btn-primary\" name=\"fix\" onClick={this.handleClick}>Need to Fix</Button>&nbsp;&nbsp;&nbsp;\n        <Button className=\"btn btn-primary\" name=\"confirm\" onClick={this.handleClick}>Confirm</Button>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Confirmation;\n\n// this.props.location.state.property\n","import { set } from \"date-fns\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport TimeRange from \"react-timeline-range-slider\";\nimport { Redirect } from \"react-router-dom\";\n\nconst now = new Date();\nconst getTodayAtSpecificHour = (hour = 9) =>\n  set(now, { hours: hour, minutes: 0 });\nconst timelineInterval = [\n  getTodayAtSpecificHour(0),\n  getTodayAtSpecificHour(24)\n];\n\nclass ReservationDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.location.state);\n    this.state = {\n      error: false,\n      disabledIntervals: [\n        {\n          start: getTodayAtSpecificHour(0),\n          end: getTodayAtSpecificHour(\n            this.props.location.state.parkingData.hours.open\n          )\n        },\n        {\n          start: getTodayAtSpecificHour(\n            this.props.location.state.parkingData.hours.open\n          ),\n          end: getTodayAtSpecificHour(now.getHours())\n        },\n        {\n          start: getTodayAtSpecificHour(\n            this.props.location.state.parkingData.hours.close\n          ),\n          end: getTodayAtSpecificHour(24)\n        }\n      ],\n      selectedInterval: [getTodayAtSpecificHour(), getTodayAtSpecificHour(15)],\n      toUserInfo: false,\n      finalRegistrationInfo: {\n        name: this.props.location.state.parkingData.name,\n        hours: this.props.location.state.parkingData.hours,\n        address: this.props.location.state.parkingData.address\n      }\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  errorHandler = ({ error }) => this.setState({ error });\n  onChangeCallback = selectedInterval =>\n    this.setState({ selectedInterval }, () => {});\n\n  handleClick(e) {\n    this.setState({\n      toUserInfo: true,\n      finalRegistrationInfo: {\n        parkingData:{\n          lotName: this.props.location.state.parkingData.name,\n        hours: this.props.location.state.parkingData.hours,\n        address: this.props.location.state.parkingData.address,\n        startReservation: format(\n          this.state.selectedInterval[0],\n          \" MMM dd, hh:mm a\"\n        ),\n        endReservation: format(\n          this.state.selectedInterval[1],\n          \" MMM dd, hh:mm a\"\n        ), price: this.props.location.state.parkingData.price\n        }\n        \n      }\n    });\n  }\n\n  render() {\n    if (this.state.toUserInfo === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/userinfo\",\n            state: this.state.finalRegistrationInfo\n          }}\n        />\n      );\n    }\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\"\n        }}\n      >\n        <div\n          style={{\n            fontFamily: \"Roboto Slab\",\n            color: \"#606367\",\n            fontSize: \"1.2rem\",\n            margin: \"20px 0\",\n            textAlign: \"center\"\n          }}\n        >\n          <h1 style={{ fontFamily: \"Roboto Slab\" }}>\n            How long do you want to stay?{\" \"}\n          </h1>\n          <span style={{ textAlign: \"center\" }}>\n            {format(this.state.selectedInterval[0], \" MMM dd, hh:mm a\")} to\n            {format(this.state.selectedInterval[1], \" MMM dd, hh:mm a\")}\n          </span>\n        </div>\n\n        <TimeRange\n          error={this.state.error}\n          ticksNumber={24}\n          selectedInterval={this.state.selectedInterval}\n          timelineInterval={timelineInterval}\n          onUpdateCallback={this.errorHandler}\n          onChangeCallback={this.onChangeCallback}\n          disabledIntervals={this.state.disabledIntervals}\n        />\n        <button\n          className=\"btn btn-primary\"\n          style={{\n            backgroundColor: \"#1A2637\",\n            borderColor: \"white\",\n            fontFamily: \"Roboto Slab\",\n            marginTop: \"40px\",\n            width: \"300px\"\n          }}\n          onClick={this.handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ReservationDetails;\n","import React, { Component } from \"react\";\nimport firebase from \"./Firebase\";\nimport { navigate } from \"@reach/router\"; //move from different pages\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./Navigation\";\nimport Login from \"./Login\";\nimport Mapbox from \"./Mapbox\";\nimport Register from \"./Register\";\nimport UserInfo from \"./UserInfo\";\nimport VehicleDetails from \"./VehicleDetails\";\nimport TransactionHandle from \"./TransactionHandle.js\";\nimport Receipt from \"./Receipt.js\";\nimport Confirmation from \"./Confirmation.js\";\nimport ReservationDetails from \"./ReservationDetails.js\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //state object\n      user: null,\n      // displayName: null,\n      userID: null\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      if (FBUser) {\n        console.log(\"Firebase User\" + FBUser.displayName);\n        console.log(\"Firebase User\" + this.state.user);\n        this.setState({\n          user: FBUser.displayName,\n          userID: FBUser.uid\n        });\n      }\n    });\n  }\n\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName: userName\n      }).then(() => {\n        this.setState({\n          user: FBUser.displayName,\n          //  displayName: FBUser.displayName,\n          userID: FBUser.uid\n        });\n        navigate(\"/\");\n      });\n    });\n  };\n\n  logOutUser = e => {\n    e.preventDefault();\n    this.setState({\n      displayName: null,\n      userID: null,\n      user: null\n    });\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        navigate(\"./\");\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div>\n            <Navigation user={this.state.user} logOutUser={this.logOutUser} />\n          </div>\n          <Switch>\n            <Route\n              exact\n              path=\"/Park-Me\"\n              component={Mapbox}\n              render={props => <Mapbox {...props} />}\n            />\n            <Route path=\"/login\" component={Login} user={this.state.user} />\n            <Route\n              path=\"/register\"\n              component={Register}\n              registerUser={this.state.user}\n            />\n            <Route\n              path=\"/reservationdetails\"\n              render={props => <ReservationDetails {...props} />}\n            />\n            <Route path=\"/userinfo\" render={props => <UserInfo {...props} />} />\n            <Route\n              path=\"/vehicleDetails\"\n              render={props => <VehicleDetails {...props} />}\n            />\n            <Route\n              path=\"/confirmation\"\n              render={props => <Confirmation {...props} />}\n            />\n            <Route\n              path=\"/transactionHandle\"\n              render={props => <TransactionHandle {...props} />}\n            />\n            <Route path=\"/receipt\" render={props => <Receipt {...props} />} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\nexport default App;\n\n//render={(props) => <Reserve parkingLot={name: \"\", location: \"\",}/>} component={Reserve}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'; //library from node_modules folder\nimport ReactDOM from 'react-dom'; //library from node_modules folder\nimport './index.css';     \nimport App from './App'; //subcomponent\nimport * as serviceWorker from './serviceWorker'; //make application modern and compatible with mobile devices\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}